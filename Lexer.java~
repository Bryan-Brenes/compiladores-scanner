// DO NOT EDIT
// Generated by JFlex 1.8.2 http://jflex.de/
// source: lexer.jflex

/* JFlex example: partial Java language lexer specification */
import java.util.ArrayList;
/**
    * This class is a simple example lexer.
    */

// See https://github.com/jflex-de/jflex/issues/222
@SuppressWarnings("FallThrough")
class Lexer {

  /** This character denotes the end of file. */
  public static final int YYEOF = -1;

  /** Initial size of the lookahead buffer. */
  private static final int ZZ_BUFFERSIZE = 16384;

  // Lexical states.
  public static final int YYINITIAL = 0;
  public static final int STRING = 2;
  public static final int hexaState = 4;
  public static final int numberState = 6;
  public static final int NaturalNumbers = 8;
  public static final int Chars = 10;
  public static final int Comments = 12;
  public static final int lineComment = 14;
  public static final int errorNumeros = 16;
  public static final int stringError = 18;
  public static final int charError = 20;
  public static final int hexaStateC = 22;
  public static final int hexaStateError = 24;
  public static final int hexaStateCError = 26;
  public static final int indetifierState = 28;
  public static final int indetifierError = 30;
  public static final int decimalError = 32;
  public static final int OperadoresState = 34;
  public static final int SpaceStateError = 36;
  public static final int SpaceStateDone = 38;
  public static final int selectNumber = 40;
  public static final int selectExtra = 42;
  public static final int selectSemiID = 44;
  public static final int plusSimbolF = 46;
  public static final int plusSimbolT = 48;
  public static final int plusSimbolF1 = 50;
  public static final int plusSimbolT1 = 52;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = {
     0,  0,  1,  1,  2,  2,  3,  3,  4,  4,  5,  5,  6,  6,  7,  7, 
     8,  8,  9,  9,  9,  9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 
    15, 15, 16, 16, 16, 16, 16, 16, 17, 17, 18, 18, 16, 16, 16, 16, 
    19, 19, 16, 16, 20, 20
  };

  /**
   * Top-level table for translating characters to character classes
   */
  private static final int [] ZZ_CMAP_TOP = zzUnpackcmap_top();

  private static final String ZZ_CMAP_TOP_PACKED_0 =
    "\1\0\1\u0100\1\u0200\1\u0300\1\u0400\1\u0500\1\u0600\1\u0700"+
    "\1\u0800\1\u0900\1\u0a00\1\u0b00\1\u0c00\1\u0d00\1\u0e00\1\u0f00"+
    "\1\u1000\1\u0100\1\u1100\1\u1200\1\u1300\1\u0100\1\u1400\1\u1500"+
    "\1\u1600\1\u1700\1\u1800\1\u1900\1\u1a00\1\u1b00\1\u0100\1\u1c00"+
    "\1\u1d00\1\u1e00\12\u1f00\1\u2000\1\u2100\1\u2200\1\u1f00\1\u2300"+
    "\1\u2400\2\u1f00\31\u0100\1\u2500\121\u0100\1\u2600\4\u0100\1\u2700"+
    "\1\u0100\1\u2800\1\u2900\1\u2a00\1\u2b00\1\u2c00\1\u2d00\53\u0100"+
    "\1\u2e00\41\u1f00\1\u0100\1\u2f00\1\u3000\1\u0100\1\u3100\1\u3200"+
    "\1\u3300\1\u3400\1\u3500\1\u3600\1\u3700\1\u3800\3\u1f00\1\u3900"+
    "\1\u3a00\1\u3b00\1\u3c00\1\u3d00\3\u1f00\1\u3e00\1\u3f00\4\u1f00"+
    "\1\u4000\11\u1f00\3\u0100\1\u4100\1\u4200\13\u1f00\4\u0100\1\u4300"+
    "\63\u1f00\2\u0100\1\u4400\4\u1f00\1\u4500\100\u1f00\1\u4600\40\u1f00"+
    "\1\u4700\1\u4800\1\u1f00\1\u4900\1\u4a00\1\u4b00\1\u4c00\26\u1f00"+
    "\1\u4d00\21\u1f00\246\u0100\1\u4e00\20\u0100\1\u4f00\1\u5000\77\u1f00"+
    "\2\u0100\1\u5000\u0b05\u1f00\1\u5100\1\u5200\u02fe\u1f00";

  private static int [] zzUnpackcmap_top() {
    int [] result = new int[4352];
    int offset = 0;
    offset = zzUnpackcmap_top(ZZ_CMAP_TOP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackcmap_top(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /**
   * Second-level tables for translating characters to character classes
   */
  private static final int [] ZZ_CMAP_BLOCKS = zzUnpackcmap_blocks();

  private static final String ZZ_CMAP_BLOCKS_PACKED_0 =
    "\11\0\1\1\1\2\1\3\1\1\1\4\16\0\4\3"+
    "\1\5\1\6\1\7\1\3\1\10\1\11\1\12\1\13"+
    "\2\11\1\14\1\6\1\11\1\15\1\16\1\17\1\20"+
    "\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30"+
    "\1\27\1\11\1\31\1\32\1\33\1\34\1\11\1\3"+
    "\6\35\24\36\1\11\1\3\2\11\1\36\1\3\1\37"+
    "\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47"+
    "\1\36\1\50\1\51\1\52\1\53\1\54\1\55\1\36"+
    "\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65"+
    "\1\66\1\67\1\70\2\11\41\0\2\3\4\10\4\3"+
    "\1\10\2\3\1\0\7\3\1\10\4\3\1\10\5\3"+
    "\27\10\1\3\37\10\1\3\u01ca\10\4\3\14\10\16\3"+
    "\5\10\7\3\1\10\1\3\1\10\21\3\160\0\5\10"+
    "\1\3\2\10\2\3\4\10\10\3\1\10\1\3\3\10"+
    "\1\3\1\10\1\3\24\10\1\3\123\10\1\3\213\10"+
    "\1\3\5\0\2\3\236\10\11\3\46\10\2\3\1\10"+
    "\7\3\47\10\7\3\1\10\1\3\55\0\1\3\1\0"+
    "\1\3\2\0\1\3\2\0\1\3\1\0\10\3\33\10"+
    "\5\3\3\10\15\3\5\0\6\3\1\10\4\3\13\0"+
    "\5\3\53\10\37\0\4\3\2\10\1\0\143\10\1\3"+
    "\1\10\10\0\1\3\6\0\2\10\2\0\1\3\4\0"+
    "\2\10\12\0\3\10\2\3\1\10\17\3\1\0\1\10"+
    "\1\0\36\10\33\0\2\3\131\10\13\0\1\10\16\3"+
    "\12\0\41\10\11\0\2\10\4\3\1\10\5\3\26\10"+
    "\4\0\1\10\11\0\1\10\3\0\1\10\5\0\22\3"+
    "\31\10\3\0\104\3\1\10\1\3\13\10\67\3\33\0"+
    "\1\3\4\0\66\10\3\0\1\10\22\0\1\10\7\0"+
    "\12\10\2\0\2\3\12\0\1\3\7\10\1\3\7\10"+
    "\1\3\3\0\1\3\10\10\2\3\2\10\2\3\26\10"+
    "\1\3\7\10\1\3\1\10\3\3\4\10\2\3\1\0"+
    "\1\10\7\0\2\3\2\0\2\3\3\0\1\10\10\3"+
    "\1\0\4\3\2\10\1\3\3\10\2\0\2\3\12\0"+
    "\4\10\7\3\1\10\5\3\3\0\1\3\6\10\4\3"+
    "\2\10\2\3\26\10\1\3\7\10\1\3\2\10\1\3"+
    "\2\10\1\3\2\10\2\3\1\0\1\3\5\0\4\3"+
    "\2\0\2\3\3\0\3\3\1\0\7\3\4\10\1\3"+
    "\1\10\7\3\14\0\3\10\1\0\13\3\3\0\1\3"+
    "\11\10\1\3\3\10\1\3\26\10\1\3\7\10\1\3"+
    "\2\10\1\3\5\10\2\3\1\0\1\10\10\0\1\3"+
    "\3\0\1\3\3\0\2\3\1\10\17\3\2\10\2\0"+
    "\2\3\12\0\1\3\1\10\17\3\3\0\1\3\10\10"+
    "\2\3\2\10\2\3\26\10\1\3\7\10\1\3\2\10"+
    "\1\3\5\10\2\3\1\0\1\10\7\0\2\3\2\0"+
    "\2\3\3\0\10\3\2\0\4\3\2\10\1\3\3\10"+
    "\2\0\2\3\12\0\1\3\1\10\20\3\1\0\1\10"+
    "\1\3\6\10\3\3\3\10\1\3\4\10\3\3\2\10"+
    "\1\3\1\10\1\3\2\10\3\3\2\10\3\3\3\10"+
    "\3\3\14\10\4\3\5\0\3\3\3\0\1\3\4\0"+
    "\2\3\1\10\6\3\1\0\16\3\12\0\11\3\1\10"+
    "\7\3\3\0\1\3\10\10\1\3\3\10\1\3\27\10"+
    "\1\3\12\10\1\3\5\10\3\3\1\10\7\0\1\3"+
    "\3\0\1\3\4\0\7\3\2\0\1\3\2\10\6\3"+
    "\2\10\2\0\2\3\12\0\22\3\2\0\1\3\10\10"+
    "\1\3\3\10\1\3\27\10\1\3\12\10\1\3\5\10"+
    "\2\3\1\0\1\10\7\0\1\3\3\0\1\3\4\0"+
    "\7\3\2\0\7\3\1\10\1\3\2\10\2\0\2\3"+
    "\12\0\1\3\2\10\17\3\2\0\1\3\10\10\1\3"+
    "\3\10\1\3\51\10\2\3\1\10\7\0\1\3\3\0"+
    "\1\3\4\0\1\10\10\3\1\0\10\3\2\10\2\0"+
    "\2\3\12\0\12\3\6\10\2\3\2\0\1\3\22\10"+
    "\3\3\30\10\1\3\11\10\1\3\1\10\2\3\7\10"+
    "\3\3\1\0\4\3\6\0\1\3\1\0\1\3\10\0"+
    "\22\3\2\0\15\3\60\10\1\0\2\10\7\0\4\3"+
    "\10\10\10\0\1\3\12\0\47\3\2\10\1\3\1\10"+
    "\2\3\2\10\1\3\1\10\2\3\1\10\6\3\4\10"+
    "\1\3\7\10\1\3\3\10\1\3\1\10\1\3\1\10"+
    "\2\3\2\10\1\3\4\10\1\0\2\10\6\0\1\3"+
    "\2\0\1\10\2\3\5\10\1\3\1\10\1\3\6\0"+
    "\2\3\12\0\2\3\4\10\40\3\1\10\27\3\2\0"+
    "\6\3\12\0\13\3\1\0\1\3\1\0\1\3\1\0"+
    "\4\3\2\0\10\10\1\3\44\10\4\3\24\0\1\3"+
    "\2\0\5\10\13\0\1\3\44\0\11\3\1\0\71\3"+
    "\53\10\24\0\1\10\12\0\6\3\6\10\4\0\4\10"+
    "\3\0\1\10\3\0\2\10\7\0\3\10\4\0\15\10"+
    "\14\0\1\10\17\0\2\3\46\10\1\3\1\10\5\3"+
    "\1\10\2\3\53\10\1\3\115\10\1\3\4\10\2\3"+
    "\7\10\1\3\1\10\1\3\4\10\2\3\51\10\1\3"+
    "\4\10\2\3\41\10\1\3\4\10\2\3\7\10\1\3"+
    "\1\10\1\3\4\10\2\3\17\10\1\3\71\10\1\3"+
    "\4\10\2\3\103\10\2\3\3\0\40\3\20\10\20\3"+
    "\125\10\14\3\u016c\10\2\3\21\10\1\3\32\10\5\3"+
    "\113\10\3\3\3\10\17\3\15\10\1\3\4\10\3\0"+
    "\13\3\22\10\3\0\13\3\22\10\2\0\14\3\15\10"+
    "\1\3\3\10\1\3\2\0\14\3\64\10\40\0\3\3"+
    "\1\10\3\3\2\10\1\0\2\3\12\0\41\3\3\0"+
    "\2\3\12\0\6\3\130\10\10\3\51\10\1\0\1\10"+
    "\5\3\106\10\12\3\35\10\3\3\14\0\4\3\14\0"+
    "\12\3\12\0\36\10\2\3\5\10\13\3\54\10\4\3"+
    "\21\0\7\10\2\0\6\3\12\0\46\3\27\10\5\0"+
    "\4\3\65\10\12\0\1\3\35\0\2\3\13\0\6\3"+
    "\12\0\15\3\1\10\130\3\5\0\57\10\21\0\7\10"+
    "\4\3\12\0\21\3\11\0\14\3\3\0\36\10\15\0"+
    "\2\10\12\0\54\10\16\0\14\3\44\10\24\0\10\3"+
    "\12\0\3\3\3\10\12\0\44\10\122\3\3\0\1\3"+
    "\25\0\4\10\1\0\4\10\3\0\2\10\11\3\300\10"+
    "\47\0\25\3\4\0\26\10\2\3\6\10\2\3\46\10"+
    "\2\3\6\10\2\3\10\10\1\3\1\10\1\3\1\10"+
    "\1\3\1\10\1\3\37\10\2\3\65\10\1\3\7\10"+
    "\1\3\1\10\3\3\3\10\1\3\7\10\3\3\4\10"+
    "\2\3\6\10\4\3\15\10\5\3\3\10\1\3\7\10"+
    "\16\3\5\0\32\3\5\0\20\3\2\10\23\3\1\10"+
    "\13\3\5\0\5\3\6\0\1\3\1\10\15\3\1\10"+
    "\20\3\15\10\3\3\33\10\25\3\15\0\4\3\1\0"+
    "\3\3\14\0\21\3\1\10\4\3\1\10\2\3\12\10"+
    "\1\3\1\10\3\3\5\10\6\3\1\10\1\3\1\10"+
    "\1\3\1\10\1\3\4\10\1\3\13\10\2\3\4\10"+
    "\5\3\5\10\4\3\1\10\21\3\51\10\u0177\3\57\10"+
    "\1\3\57\10\1\3\205\10\6\3\4\10\3\0\2\10"+
    "\14\3\46\10\1\3\1\10\5\3\1\10\2\3\70\10"+
    "\7\3\1\10\17\3\1\0\27\10\11\3\7\10\1\3"+
    "\7\10\1\3\7\10\1\3\7\10\1\3\7\10\1\3"+
    "\7\10\1\3\7\10\1\3\7\10\1\3\40\0\57\3"+
    "\1\10\325\3\3\10\31\3\11\10\6\0\1\3\5\10"+
    "\2\3\5\10\4\3\126\10\2\3\2\0\2\3\3\10"+
    "\1\3\132\10\1\3\4\10\5\3\51\10\3\3\136\10"+
    "\21\3\33\10\65\3\306\10\112\3\315\10\63\3\215\10"+
    "\103\3\56\10\2\3\15\10\3\3\20\10\12\0\2\10"+
    "\24\3\57\10\1\0\4\3\12\0\1\3\31\10\7\3"+
    "\1\0\120\10\2\0\45\3\11\10\2\3\147\10\2\3"+
    "\4\10\1\3\4\10\14\3\13\10\115\3\12\10\1\0"+
    "\3\10\1\0\4\10\1\0\27\10\5\0\20\3\1\10"+
    "\7\3\64\10\14\3\2\0\62\10\21\0\13\3\12\0"+
    "\6\3\22\0\6\10\3\3\1\10\4\3\12\0\34\10"+
    "\10\0\2\3\27\10\15\0\14\3\35\10\3\3\4\0"+
    "\57\10\16\0\16\3\1\10\12\0\46\3\51\10\16\0"+
    "\11\3\3\10\1\0\10\10\2\0\2\3\12\0\6\3"+
    "\27\10\3\3\1\10\1\0\4\3\60\10\1\0\1\10"+
    "\3\0\2\10\2\0\5\10\2\0\1\10\1\0\1\10"+
    "\30\3\3\10\2\3\13\10\5\0\2\3\3\10\2\0"+
    "\12\3\6\10\2\3\6\10\2\3\6\10\11\3\7\10"+
    "\1\3\7\10\221\3\43\10\10\0\1\3\2\0\2\3"+
    "\12\0\6\3\244\10\14\3\27\10\4\3\61\10\4\3"+
    "\156\10\2\3\152\10\46\3\7\10\14\3\5\10\5\3"+
    "\1\10\1\0\12\10\1\3\15\10\1\3\5\10\1\3"+
    "\1\10\1\3\2\10\1\3\2\10\1\3\154\10\41\3"+
    "\153\10\22\3\100\10\2\3\66\10\50\3\15\10\3\3"+
    "\20\0\20\3\7\0\14\3\2\10\30\3\3\10\31\3"+
    "\1\10\6\3\5\10\1\3\207\10\2\3\1\0\4\3"+
    "\1\10\13\3\12\0\7\3\32\10\4\3\1\10\1\3"+
    "\32\10\13\3\131\10\3\3\6\10\2\3\6\10\2\3"+
    "\6\10\2\3\3\10\3\3\2\10\3\3\2\10\22\3"+
    "\3\0\4\3\14\10\1\3\32\10\1\3\23\10\1\3"+
    "\2\10\1\3\17\10\2\3\16\10\42\3\173\10\105\3"+
    "\65\10\210\3\1\0\202\3\35\10\3\3\61\10\57\3"+
    "\37\10\21\3\33\10\65\3\36\10\2\3\44\10\4\3"+
    "\10\10\1\3\5\10\52\3\236\10\2\3\12\0\126\3"+
    "\6\10\2\3\1\10\1\3\54\10\1\3\2\10\3\3"+
    "\1\10\2\3\27\10\252\3\26\10\12\3\32\10\106\3"+
    "\70\10\6\3\2\10\100\3\1\10\3\0\1\3\2\0"+
    "\5\3\4\0\4\10\1\3\3\10\1\3\33\10\4\3"+
    "\3\0\4\3\1\0\40\3\35\10\203\3\66\10\12\3"+
    "\26\10\12\3\23\10\215\3\111\10\267\3\3\0\65\10"+
    "\17\0\37\3\12\0\20\3\3\0\55\10\13\0\2\3"+
    "\1\0\22\3\31\10\7\3\12\0\6\3\3\0\44\10"+
    "\16\0\1\3\12\0\100\3\3\0\60\10\16\0\4\10"+
    "\13\3\12\0\246\3\53\10\15\0\10\3\12\0\66\3"+
    "\157\10\221\3\143\10\235\3\57\10\321\3\71\10\307\3"+
    "\105\10\13\3\1\10\56\0\20\3\4\0\15\10\140\3"+
    "\2\10\u0163\3\5\0\3\3\26\0\2\3\7\0\36\3"+
    "\4\0\224\3\3\0\273\3\125\10\1\3\107\10\1\3"+
    "\2\10\2\3\1\10\2\3\2\10\2\3\4\10\1\3"+
    "\14\10\1\3\1\10\1\3\7\10\1\3\101\10\1\3"+
    "\4\10\2\3\10\10\1\3\7\10\1\3\34\10\1\3"+
    "\4\10\1\3\5\10\1\3\1\10\3\3\7\10\1\3"+
    "\u0154\10\2\3\31\10\1\3\31\10\1\3\37\10\1\3"+
    "\31\10\1\3\37\10\1\3\31\10\1\3\37\10\1\3"+
    "\31\10\1\3\37\10\1\3\31\10\1\3\10\10\2\3"+
    "\62\0\4\10\1\3\33\10\1\3\2\10\1\3\1\10"+
    "\2\3\1\10\1\3\12\10\1\3\4\10\1\3\1\10"+
    "\1\3\1\10\6\3\1\10\4\3\1\10\1\3\1\10"+
    "\1\3\1\10\1\3\3\10\1\3\2\10\1\3\1\10"+
    "\2\3\1\10\1\3\1\10\1\3\1\10\1\3\1\10"+
    "\1\3\1\10\1\3\2\10\1\3\1\10\2\3\4\10"+
    "\1\3\7\10\1\3\4\10\1\3\4\10\1\3\1\10"+
    "\1\3\12\10\1\3\21\10\5\3\3\10\1\3\5\10"+
    "\1\3\21\10\104\3\327\10\51\3\65\10\13\3\336\10"+
    "\343\3\1\0\36\3\140\0\200\3\360\0\20\3";

  private static int [] zzUnpackcmap_blocks() {
    int [] result = new int[21248];
    int offset = 0;
    offset = zzUnpackcmap_blocks(ZZ_CMAP_BLOCKS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackcmap_blocks(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /**
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\25\0\1\1\2\2\1\3\1\4\1\5\2\3\1\6"+
    "\4\3\2\7\2\3\21\5\1\3\1\10\2\11\1\12"+
    "\1\13\15\10\1\14\2\15\1\16\1\17\1\10\1\20"+
    "\5\10\11\14\1\21\2\22\3\23\1\21\2\24\2\23"+
    "\3\25\1\26\12\25\1\21\1\27\2\22\1\24\2\22"+
    "\16\27\2\30\1\31\1\32\1\1\2\33\16\1\1\25"+
    "\2\34\15\25\1\24\2\35\15\24\16\25\12\36\1\37"+
    "\1\25\1\40\1\24\4\40\1\25\1\41\2\40\15\24"+
    "\1\42\1\40\1\43\3\24\2\25\3\24\1\44\16\24"+
    "\15\1\1\45\1\46\1\47\2\45\1\47\12\45\25\50"+
    "\1\51\16\52\1\53\25\54\2\0\1\55\1\56\1\57"+
    "\1\60\1\5\1\61\47\5\2\10\1\61\26\10\1\0"+
    "\1\10\1\61\2\0\1\10\23\0\1\62\2\25\1\61"+
    "\26\25\4\0\1\25\1\63\2\0\1\61\26\0\2\25"+
    "\1\61\26\25\1\64\1\0\2\24\1\61\26\24\1\65"+
    "\1\66\1\0\2\24\1\61\26\24\2\50\1\61\26\50"+
    "\2\52\1\61\26\52\2\54\1\61\26\54\16\5\1\61"+
    "\2\5\1\61\23\5\1\67\1\5\6\10\1\61\16\10"+
    "\6\0\1\61\17\0\6\25\1\61\16\25\6\0\1\61"+
    "\16\0\6\25\1\61\16\25\1\70\6\24\1\61\16\24"+
    "\1\71\6\24\1\61\16\24\6\50\1\61\16\50\6\52"+
    "\1\61\16\52\6\54\1\61\16\54\3\5\1\61\1\72"+
    "\6\5\1\73\1\74\17\5\1\72\6\5\1\61\25\10"+
    "\1\61\25\0\1\61\21\25\1\61\25\0\1\61\25\25"+
    "\1\61\25\24\1\61\21\24\1\61\21\50\1\61\25\52"+
    "\1\61\25\54\1\61\2\5\1\61\26\5\17\10\17\0"+
    "\15\25\17\0\17\25\34\24\15\50\17\52\17\54\1\5"+
    "\2\61\7\5\1\61\2\5\4\10\1\61\1\10\4\0"+
    "\1\61\1\0\4\25\1\61\1\25\4\0\1\61\1\0"+
    "\4\25\1\61\1\25\4\24\1\61\5\24\1\61\1\24"+
    "\4\50\1\61\1\50\4\52\1\61\1\52\4\54\1\61"+
    "\1\54\5\5\4\10\4\0\4\25\4\0\4\25\10\24"+
    "\4\50\4\52\4\54\2\5\1\10\1\0\1\25\1\0"+
    "\1\25\2\24\1\50\1\52\1\54\2\5\1\10\1\0"+
    "\1\25\1\0\1\25\2\24\1\50\1\52\1\54\2\5";

  private static int [] zzUnpackAction() {
    int [] result = new int[1474];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /**
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\71\0\162\0\253\0\344\0\u011d\0\u0156\0\u018f"+
    "\0\u01c8\0\u0201\0\u023a\0\u0273\0\u02ac\0\u02e5\0\u031e\0\u0357"+
    "\0\u0390\0\u03c9\0\u0402\0\u043b\0\u0474\0\u04ad\0\u04ad\0\u04e6"+
    "\0\u051f\0\u04ad\0\u0558\0\u04ad\0\u0591\0\u04ad\0\u05ca\0\u0603"+
    "\0\u063c\0\u0675\0\u06ae\0\u06e7\0\u0720\0\u0759\0\u0792\0\u07cb"+
    "\0\u0804\0\u083d\0\u0876\0\u08af\0\u08e8\0\u0921\0\u095a\0\u0993"+
    "\0\u09cc\0\u0a05\0\u0a3e\0\u0a77\0\u0ab0\0\u0ae9\0\u0b22\0\u0b5b"+
    "\0\u0b94\0\u04ad\0\u0bcd\0\u04ad\0\u04ad\0\u0c06\0\u0c3f\0\u0c78"+
    "\0\u0cb1\0\u0cea\0\u0d23\0\u0d5c\0\u0d95\0\u0dce\0\u0e07\0\u0e40"+
    "\0\u0e79\0\u0eb2\0\u04ad\0\u04ad\0\u0eeb\0\u04ad\0\u04ad\0\u0f24"+
    "\0\u04ad\0\u0f5d\0\u0f96\0\u0fcf\0\u1008\0\u1041\0\u107a\0\u10b3"+
    "\0\u10ec\0\u1125\0\u115e\0\u1197\0\u11d0\0\u1209\0\u1242\0\u04ad"+
    "\0\u04ad\0\u127b\0\u12b4\0\u04ad\0\u12ed\0\u12b4\0\u1326\0\u135f"+
    "\0\u1398\0\u13d1\0\u140a\0\u1443\0\u147c\0\u14b5\0\u14ee\0\u1527"+
    "\0\u1560\0\u1599\0\u15d2\0\u160b\0\u1644\0\u167d\0\u16b6\0\u16ef"+
    "\0\u1728\0\u04ad\0\u1761\0\u179a\0\u1761\0\u17d3\0\u180c\0\u1845"+
    "\0\u187e\0\u18b7\0\u18f0\0\u107a\0\u10b3\0\u10ec\0\u1125\0\u115e"+
    "\0\u1197\0\u11d0\0\u1209\0\u1242\0\u1929\0\u04ad\0\u1962\0\u04ad"+
    "\0\u04ad\0\u199b\0\u04ad\0\u19d4\0\u1a0d\0\u1a46\0\u1a7f\0\u1ab8"+
    "\0\u1af1\0\u1b2a\0\u1b63\0\u1b9c\0\u1bd5\0\u1c0e\0\u1c47\0\u1c80"+
    "\0\u1cb9\0\u1cf2\0\u04ad\0\u04ad\0\u1d2b\0\u1845\0\u187e\0\u18b7"+
    "\0\u18f0\0\u107a\0\u10b3\0\u10ec\0\u1125\0\u115e\0\u1197\0\u11d0"+
    "\0\u1209\0\u1242\0\u04ad\0\u04ad\0\u1d64\0\u1845\0\u187e\0\u18b7"+
    "\0\u18f0\0\u107a\0\u10b3\0\u10ec\0\u1125\0\u115e\0\u1197\0\u11d0"+
    "\0\u1209\0\u1242\0\u1d9d\0\u1dd6\0\u1e0f\0\u1e48\0\u1e81\0\u1eba"+
    "\0\u1ef3\0\u1f2c\0\u1f65\0\u1f9e\0\u1fd7\0\u2010\0\u2049\0\u2082"+
    "\0\u04ad\0\u107a\0\u10b3\0\u10ec\0\u1125\0\u115e\0\u1197\0\u11d0"+
    "\0\u1209\0\u1242\0\u04ad\0\u20bb\0\u20f4\0\u212d\0\u04ad\0\u2166"+
    "\0\u219f\0\u135f\0\u20f4\0\u21d8\0\u2211\0\u224a\0\u2283\0\u22bc"+
    "\0\u22f5\0\u232e\0\u2367\0\u23a0\0\u23d9\0\u2412\0\u244b\0\u2484"+
    "\0\u24bd\0\u24f6\0\u252f\0\u21d8\0\u2568\0\u04ad\0\u25a1\0\u25da"+
    "\0\u2613\0\u264c\0\u2685\0\u26be\0\u26f7\0\u2730\0\u04ad\0\u2769"+
    "\0\u27a2\0\u27db\0\u2814\0\u284d\0\u2886\0\u28bf\0\u28f8\0\u2931"+
    "\0\u296a\0\u29a3\0\u29dc\0\u2a15\0\u2a4e\0\u1845\0\u187e\0\u18b7"+
    "\0\u18f0\0\u107a\0\u10b3\0\u10ec\0\u1125\0\u115e\0\u1197\0\u11d0"+
    "\0\u1209\0\u1242\0\u04ad\0\u04ad\0\u2a87\0\u1845\0\u187e\0\u2ac0"+
    "\0\u18f0\0\u107a\0\u10b3\0\u10ec\0\u1125\0\u115e\0\u1197\0\u11d0"+
    "\0\u1209\0\u1242\0\u2af9\0\u04ad\0\u2b32\0\u2b6b\0\u2ba4\0\u2bdd"+
    "\0\u2c16\0\u2c4f\0\u2c88\0\u2cc1\0\u2cfa\0\u2d33\0\u2d6c\0\u2da5"+
    "\0\u2dde\0\u2e17\0\u2e50\0\u2e89\0\u2ec2\0\u2efb\0\u2f34\0\u04ad"+
    "\0\u2f6d\0\u2fa6\0\u2fdf\0\u3018\0\u3051\0\u308a\0\u30c3\0\u30fc"+
    "\0\u3135\0\u316e\0\u31a7\0\u31e0\0\u3219\0\u3252\0\u04ad\0\u328b"+
    "\0\u32c4\0\u04ad\0\u32fd\0\u3336\0\u336f\0\u33a8\0\u33e1\0\u341a"+
    "\0\u3453\0\u348c\0\u34c5\0\u34fe\0\u3537\0\u3570\0\u35a9\0\u35e2"+
    "\0\u361b\0\u3654\0\u368d\0\u36c6\0\u36ff\0\u06ae\0\u3738\0\u04ad"+
    "\0\u04ad\0\u06ae\0\u3771\0\u0558\0\u37aa\0\u37e3\0\u381c\0\u3855"+
    "\0\u388e\0\u38c7\0\u3900\0\u3939\0\u3972\0\u39ab\0\u39e4\0\u3a1d"+
    "\0\u3a56\0\u3a8f\0\u3ac8\0\u3b01\0\u3b3a\0\u3b73\0\u3bac\0\u3be5"+
    "\0\u3c1e\0\u3c57\0\u3c90\0\u3cc9\0\u3d02\0\u3d3b\0\u3d74\0\u3dad"+
    "\0\u3de6\0\u3e1f\0\u3e58\0\u3e91\0\u3eca\0\u3f03\0\u3f3c\0\u3f75"+
    "\0\u3fae\0\u3fe7\0\u4020\0\u4059\0\u4092\0\u0b94\0\u40cb\0\u4104"+
    "\0\u413d\0\u4176\0\u41af\0\u41e8\0\u4221\0\u425a\0\u4293\0\u42cc"+
    "\0\u4305\0\u433e\0\u4377\0\u43b0\0\u43e9\0\u4422\0\u445b\0\u4494"+
    "\0\u44cd\0\u4506\0\u453f\0\u4578\0\u45b1\0\u45ea\0\u04ad\0\u4623"+
    "\0\u465c\0\u4695\0\u46ce\0\u4707\0\u4740\0\u4779\0\u47b2\0\u47eb"+
    "\0\u4824\0\u485d\0\u4896\0\u48cf\0\u4908\0\u4941\0\u497a\0\u49b3"+
    "\0\u49ec\0\u4a25\0\u4a5e\0\u4a97\0\u4ad0\0\u4b09\0\u4b42\0\u4b7b"+
    "\0\u140a\0\u4bb4\0\u4bed\0\u4c26\0\u4c5f\0\u4c98\0\u4cd1\0\u4d0a"+
    "\0\u4d43\0\u4d7c\0\u4db5\0\u4dee\0\u4e27\0\u4e60\0\u4e99\0\u4ed2"+
    "\0\u4f0b\0\u4f44\0\u4f7d\0\u4fb6\0\u4fef\0\u5028\0\u5061\0\u509a"+
    "\0\u50d3\0\u199b\0\u510c\0\u5145\0\u510c\0\u517e\0\u51b7\0\u199b"+
    "\0\u51f0\0\u5229\0\u5262\0\u529b\0\u52d4\0\u530d\0\u5346\0\u537f"+
    "\0\u53b8\0\u53f1\0\u542a\0\u5463\0\u549c\0\u54d5\0\u550e\0\u5547"+
    "\0\u5580\0\u55b9\0\u55f2\0\u562b\0\u5664\0\u569d\0\u56d6\0\u570f"+
    "\0\u1d9d\0\u5748\0\u5781\0\u57ba\0\u57f3\0\u582c\0\u5865\0\u589e"+
    "\0\u58d7\0\u5910\0\u5949\0\u5982\0\u59bb\0\u59f4\0\u5a2d\0\u5a66"+
    "\0\u5a9f\0\u5ad8\0\u5b11\0\u5b4a\0\u5b83\0\u5bbc\0\u5bf5\0\u04ad"+
    "\0\u5c2e\0\u5c67\0\u5ca0\0\u212d\0\u5cd9\0\u5d12\0\u5d4b\0\u5d84"+
    "\0\u5dbd\0\u5df6\0\u5e2f\0\u5e68\0\u5ea1\0\u5eda\0\u5f13\0\u5f4c"+
    "\0\u5f85\0\u5fbe\0\u5ff7\0\u6030\0\u6069\0\u60a2\0\u60db\0\u6114"+
    "\0\u614d\0\u6186\0\u04ad\0\u04ad\0\u61bf\0\u61f8\0\u6231\0\u2769"+
    "\0\u626a\0\u62a3\0\u62dc\0\u6315\0\u634e\0\u6387\0\u63c0\0\u63f9"+
    "\0\u6432\0\u646b\0\u64a4\0\u64dd\0\u6516\0\u654f\0\u6588\0\u65c1"+
    "\0\u65fa\0\u6633\0\u666c\0\u66a5\0\u66de\0\u6717\0\u6750\0\u6789"+
    "\0\u2c16\0\u67c2\0\u67fb\0\u6834\0\u686d\0\u68a6\0\u68df\0\u6918"+
    "\0\u6951\0\u698a\0\u69c3\0\u69fc\0\u6a35\0\u6a6e\0\u6aa7\0\u6ae0"+
    "\0\u6b19\0\u6b52\0\u6b8b\0\u6bc4\0\u6bfd\0\u6c36\0\u6c6f\0\u6ca8"+
    "\0\u6ce1\0\u2f6d\0\u6d1a\0\u6d53\0\u6d8c\0\u6dc5\0\u6dfe\0\u6e37"+
    "\0\u6e70\0\u6ea9\0\u6ee2\0\u6f1b\0\u6f54\0\u6f8d\0\u6fc6\0\u6fff"+
    "\0\u7038\0\u7071\0\u70aa\0\u70e3\0\u711c\0\u7155\0\u718e\0\u71c7"+
    "\0\u7200\0\u7239\0\u32c4\0\u7272\0\u72ab\0\u72e4\0\u731d\0\u7356"+
    "\0\u738f\0\u73c8\0\u7401\0\u743a\0\u7473\0\u74ac\0\u74e5\0\u751e"+
    "\0\u7557\0\u7590\0\u75c9\0\u7602\0\u763b\0\u7674\0\u76ad\0\u76e6"+
    "\0\u771f\0\u7758\0\u7791\0\u77ca\0\u7803\0\u783c\0\u7875\0\u78ae"+
    "\0\u78e7\0\u7920\0\u7959\0\u7992\0\u79cb\0\u7a04\0\u7a3d\0\u7a76"+
    "\0\u7aaf\0\u7ae8\0\u7b21\0\u7b5a\0\u7b93\0\u7bcc\0\u7c05\0\u7c3e"+
    "\0\u7c77\0\u7cb0\0\u7ce9\0\u7d22\0\u7d5b\0\u7d94\0\u7dcd\0\u7e06"+
    "\0\u7e3f\0\u7e78\0\u7eb1\0\u7eea\0\u7f23\0\u7f5c\0\u0558\0\u7f95"+
    "\0\u7fce\0\u8007\0\u8040\0\u8079\0\u80b2\0\u80eb\0\u8124\0\u815d"+
    "\0\u8196\0\u81cf\0\u8208\0\u8241\0\u827a\0\u82b3\0\u82ec\0\u8325"+
    "\0\u835e\0\u8397\0\u83d0\0\u8409\0\u8442\0\u847b\0\u84b4\0\u84ed"+
    "\0\u8526\0\u855f\0\u8598\0\u85d1\0\u860a\0\u8643\0\u867c\0\u86b5"+
    "\0\u86ee\0\u8727\0\u8760\0\u8799\0\u87d2\0\u880b\0\u8844\0\u887d"+
    "\0\u88b6\0\u88ef\0\u1326\0\u8928\0\u8961\0\u899a\0\u89d3\0\u8a0c"+
    "\0\u8a45\0\u8a7e\0\u8ab7\0\u8af0\0\u8b29\0\u8b62\0\u8b9b\0\u8bd4"+
    "\0\u8c0d\0\u8c46\0\u8c7f\0\u8cb8\0\u8cf1\0\u8d2a\0\u8d63\0\u8d9c"+
    "\0\u8dd5\0\u8e0e\0\u8e47\0\u8e80\0\u8eb9\0\u8ef2\0\u8f2b\0\u8f64"+
    "\0\u8f9d\0\u8fd6\0\u900f\0\u9048\0\u9081\0\u90ba\0\u90f3\0\u912c"+
    "\0\u9165\0\u919e\0\u91d7\0\u9210\0\u9249\0\u9282\0\u92bb\0\u92f4"+
    "\0\u932d\0\u9366\0\u939f\0\u93d8\0\u9411\0\u944a\0\u9483\0\u94bc"+
    "\0\u94f5\0\u952e\0\u9567\0\u95a0\0\u95d9\0\u9612\0\u964b\0\u9684"+
    "\0\u96bd\0\u96f6\0\u04ad\0\u972f\0\u9768\0\u97a1\0\u97da\0\u9813"+
    "\0\u984c\0\u9885\0\u98be\0\u98f7\0\u9930\0\u9969\0\u99a2\0\u99db"+
    "\0\u9a14\0\u9a4d\0\u9a86\0\u9abf\0\u9af8\0\u9b31\0\u9b6a\0\u9ba3"+
    "\0\u04ad\0\u9bdc\0\u9c15\0\u9c4e\0\u9c87\0\u9cc0\0\u9cf9\0\u9d32"+
    "\0\u9d6b\0\u9da4\0\u9ddd\0\u9e16\0\u9e4f\0\u9e88\0\u9ec1\0\u9efa"+
    "\0\u9f33\0\u9f6c\0\u9fa5\0\u9fde\0\ua017\0\ua050\0\ua089\0\ua0c2"+
    "\0\ua0fb\0\ua134\0\ua16d\0\ua1a6\0\ua1df\0\ua218\0\ua251\0\ua28a"+
    "\0\ua2c3\0\ua2fc\0\ua335\0\ua36e\0\ua3a7\0\ua3e0\0\ua419\0\ua452"+
    "\0\ua48b\0\ua4c4\0\ua4fd\0\ua536\0\ua56f\0\ua5a8\0\ua5e1\0\ua61a"+
    "\0\ua653\0\ua68c\0\ua6c5\0\ua6fe\0\ua737\0\ua770\0\ua7a9\0\ua7e2"+
    "\0\ua81b\0\ua854\0\ua88d\0\ua8c6\0\ua8ff\0\ua938\0\ua971\0\ua9aa"+
    "\0\ua9e3\0\uaa1c\0\uaa55\0\uaa8e\0\uaac7\0\uab00\0\uab39\0\uab72"+
    "\0\uabab\0\uabe4\0\uac1d\0\uac56\0\uac8f\0\uacc8\0\uad01\0\uad3a"+
    "\0\uad73\0\uadac\0\uade5\0\uae1e\0\uae57\0\uae90\0\uaec9\0\uaf02"+
    "\0\uaf3b\0\uaf74\0\uafad\0\uafe6\0\ub01f\0\ub058\0\ub091\0\ub0ca"+
    "\0\u04ad\0\u04ad\0\ub103\0\ub13c\0\ub175\0\ub1ae\0\ub1e7\0\ub220"+
    "\0\ub259\0\ub292\0\ub2cb\0\ub304\0\ub33d\0\ub376\0\ub3af\0\ub3e8"+
    "\0\ub421\0\u0558\0\ub45a\0\ub493\0\ub4cc\0\ub505\0\ub53e\0\ub577"+
    "\0\ub5b0\0\ub5e9\0\ub622\0\ub65b\0\ub694\0\ub6cd\0\ub706\0\ub73f"+
    "\0\ub778\0\ub7b1\0\ub7ea\0\ub823\0\ub85c\0\ub895\0\ub8ce\0\ub907"+
    "\0\ub940\0\ub979\0\ub9b2\0\ub9eb\0\uba24\0\uba5d\0\uba96\0\ubacf"+
    "\0\ubb08\0\ubb41\0\ubb7a\0\ubbb3\0\ubbec\0\ubc25\0\ubc5e\0\ubc97"+
    "\0\ubcd0\0\ubd09\0\ubd42\0\ubd7b\0\ubdb4\0\ubded\0\ube26\0\ube5f"+
    "\0\ube98\0\ubed1\0\ubf0a\0\ubf43\0\ubf7c\0\ubfb5\0\ubfee\0\uc027"+
    "\0\uc060\0\uc099\0\uc0d2\0\uc10b\0\uc144\0\uc17d\0\uc1b6\0\uc1ef"+
    "\0\uc228\0\uc261\0\uc29a\0\uc2d3\0\uc30c\0\uc345\0\uc37e\0\uc3b7"+
    "\0\uc3f0\0\uc429\0\uc462\0\uc49b\0\uc4d4\0\uc50d\0\uc546\0\uc57f"+
    "\0\uc5b8\0\uc5f1\0\uc62a\0\uc663\0\uc69c\0\uc6d5\0\uc70e\0\uc747"+
    "\0\uc780\0\uc7b9\0\uc7f2\0\uc82b\0\uc864\0\uc89d\0\uc8d6\0\uc90f"+
    "\0\uc948\0\uc981\0\uc9ba\0\uc9f3\0\uca2c\0\uca65\0\uca9e\0\ucad7"+
    "\0\ucb10\0\ucb49\0\ucb82\0\ucbbb\0\ucbf4\0\ucc2d\0\ucc66\0\ucc9f"+
    "\0\uccd8\0\ucd11\0\ucd4a\0\ucd83\0\ucdbc\0\ucdf5\0\uce2e\0\uce67"+
    "\0\ucea0\0\uced9\0\ucf12\0\ucf4b\0\ucf84\0\ucfbd\0\ucff6\0\ud02f"+
    "\0\ud068\0\ud0a1\0\ud0da\0\ud113\0\ud14c\0\ud185\0\ud1be\0\ud1f7"+
    "\0\ud230\0\ud269\0\ud2a2\0\ud2db\0\ud314\0\ud34d\0\ud386\0\ud3bf"+
    "\0\ud3f8\0\ud431\0\ud46a\0\ud4a3\0\ud4dc\0\ud515\0\ud54e\0\ud587"+
    "\0\ud5c0\0\ud5f9\0\ud632\0\ud66b\0\ud6a4\0\ud6dd\0\ud716\0\ud74f"+
    "\0\ud788\0\ud7c1\0\ud7fa\0\ud833\0\ud86c\0\ud8a5\0\ud8de\0\ud917"+
    "\0\ud950\0\ud989\0\ud9c2\0\ud9fb\0\uda34\0\uda6d\0\udaa6\0\udadf"+
    "\0\udb18\0\udb51\0\udb8a\0\udbc3\0\udbfc\0\udc35\0\udc6e\0\udca7"+
    "\0\udce0\0\udd19\0\udd52\0\udd8b\0\uddc4\0\uddfd\0\ude36\0\ude6f"+
    "\0\udea8\0\udee1\0\udf1a\0\udf53\0\udf8c\0\udfc5\0\udffe\0\ue037"+
    "\0\ue070\0\ue0a9\0\ue0e2\0\ue11b\0\ue154\0\ue18d\0\ue1c6\0\ue1ff"+
    "\0\ue238\0\ue271\0\ue2aa\0\ue2e3\0\ue31c\0\ue355\0\ue38e\0\ue3c7"+
    "\0\ue400\0\ue439\0\ue472\0\ue4ab\0\ue4e4\0\ue51d\0\ue556\0\ue58f"+
    "\0\ue5c8\0\ue601\0\ue63a\0\ue673\0\ue6ac\0\ue6e5\0\ue71e\0\ue757"+
    "\0\ue790\0\ue7c9\0\ue802\0\ue83b\0\ue874\0\ue8ad\0\ue8e6\0\ue91f"+
    "\0\ue958\0\ue991\0\ue9ca\0\uea03\0\uea3c\0\uea75\0\ueaae\0\ueae7"+
    "\0\ueb20\0\ueb59\0\ueb92\0\uebcb\0\uec04\0\uec3d\0\uec76\0\uecaf"+
    "\0\uece8\0\ued21\0\ued5a\0\ued93\0\uedcc\0\uee05\0\uee3e\0\uee77"+
    "\0\ueeb0\0\ueee9\0\uef22\0\uef5b\0\uef94\0\uefcd\0\uf006\0\uf03f"+
    "\0\uf078\0\uf0b1\0\uf0ea\0\uf123\0\uf15c\0\uf195\0\uf1ce\0\uf207"+
    "\0\uf240\0\uf279\0\uf2b2\0\uf2eb\0\uf324\0\uf35d\0\uf396\0\uf3cf"+
    "\0\uf408\0\uf441\0\uf47a\0\uf4b3\0\uf4ec\0\uf525\0\uf55e\0\uf597"+
    "\0\uf5d0\0\uf609\0\uf642\0\uf67b\0\uf6b4\0\uf6ed\0\uf726\0\uf75f"+
    "\0\uf798\0\uf7d1\0\uf80a\0\uf843\0\uf87c\0\uf8b5\0\uf8ee\0\uf927"+
    "\0\uf960\0\uf999\0\uf9d2\0\ufa0b\0\ufa44\0\ufa7d\0\ufab6\0\ufaef"+
    "\0\ufb28\0\ufb61\0\ufb9a\0\ufbd3\0\ufc0c\0\ufc45\0\ufc7e\0\ufcb7"+
    "\0\ufcf0\0\ufd29\0\ufd62\0\ufd9b\0\ufdd4\0\ufe0d\0\ufe46\0\ufe7f"+
    "\0\ufeb8\0\ufef1\0\uff2a\0\uff63\0\uff9c\0\uffd5\1\16\1\107"+
    "\1\200\1\271\1\362\1\u012b\1\u0164\1\u019d\1\u01d6\1\u020f"+
    "\1\u0248\1\u0281\1\u02ba\1\u02f3\1\u032c\1\u0365\1\u039e\1\u03d7"+
    "\1\u0410\1\u0449\1\u0482\1\u04bb\1\u04f4\1\u052d\1\u0566\1\u059f"+
    "\1\u05d8\1\u0611\1\u064a\1\u0683\1\u06bc\1\u06f5\1\u072e\1\u0767"+
    "\1\u07a0\1\u07d9\1\u0812\1\u084b\1\u0884\1\u08bd\1\u08f6\1\u092f"+
    "\1\u0968\1\u09a1\1\u09da\1\u0a13\1\u0a4c\1\u0a85\1\u0abe\1\u0af7"+
    "\1\u0b30\1\u0b69\1\u0ba2\1\u0bdb\0\u7e3f\1\u0c14\1\u0c4d\1\u0c86"+
    "\1\u0cbf\1\u0cf8\1\u0d31\0\u835e\1\u0d6a\1\u0da3\1\u0ddc\1\u0e15"+
    "\1\u0e4e\0\u880b\1\u0e87\1\u0ec0\1\u0ef9\1\u0f32\1\u0f6b\0\u8cb8"+
    "\1\u0fa4\1\u0fdd\1\u1016\1\u104f\1\u1088\0\u9165\1\u10c1\1\u10fa"+
    "\1\u1133\1\u116c\1\u11a5\0\u9612\1\u11de\1\u1217\1\u1250\1\u1289"+
    "\1\u12c2\0\u9abf\1\u12fb\1\u1334\1\u136d\1\u13a6\1\u13df\0\u9f6c"+
    "\1\u1418\1\u1451\1\u148a\1\u14c3\1\u14fc\0\ua419\1\u1535\1\u156e"+
    "\1\u15a7\1\u15e0\1\u1619\0\ua8c6\1\u1652\1\u168b\1\u16c4\1\u16fd"+
    "\1\u1736\0\uad73\1\u176f\1\u17a8\1\u17e1\1\u181a\1\u1853\1\u188c"+
    "\1\u18c5\1\u18fe\1\u1937\1\u1970\1\u19a9\1\u19e2\1\u1a1b\1\u1a54"+
    "\1\u1a8d\1\u1ac6\1\u1aff\1\u1b38\1\u1b71\1\u1baa\1\u1be3\1\u1c1c"+
    "\1\u1c55\1\u1c8e\1\u1cc7\1\u1d00\1\u1d39\1\u1d72\1\u1dab\1\u1de4"+
    "\1\u1e1d\1\u1e56\1\u1e8f\1\u1ec8\1\u1f01\1\u1f3a\1\u1f73\1\u1fac"+
    "\1\u1fe5\1\u201e\1\u2057\1\u2090\1\u20c9\1\u2102\1\u213b\1\u2174"+
    "\1\u21ad\1\u21e6\1\u221f\1\u2258\1\u2291\1\u22ca\1\u2303\1\u233c"+
    "\1\u2375\1\u23ae\1\u23e7\1\u2420\1\u2459\1\u2492\1\u24cb\1\u2504"+
    "\1\u253d\1\u2576\1\u25af\1\u25e8\1\u2621\1\u265a\1\u2693\1\u26cc"+
    "\1\u2705\1\u273e";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[1474];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /**
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\26\2\27\1\26\1\30\1\27\1\31\1\32\1\33"+
    "\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43"+
    "\10\44\1\34\1\45\1\31\1\46\2\33\1\47\1\50"+
    "\1\51\1\52\1\53\1\54\1\33\1\55\1\56\2\33"+
    "\1\57\2\33\1\60\1\61\1\62\1\63\1\64\1\65"+
    "\1\66\1\33\1\67\1\33\1\34\1\70\2\71\1\72"+
    "\1\71\1\73\2\71\1\74\3\71\1\75\25\71\1\76"+
    "\1\77\1\100\1\101\2\71\1\102\2\71\1\103\2\71"+
    "\1\104\1\105\1\106\1\107\1\110\1\111\1\112\5\71"+
    "\1\113\2\114\1\113\1\115\1\114\1\113\1\116\3\113"+
    "\1\117\4\113\11\120\1\121\3\113\1\122\1\113\2\122"+
    "\1\123\1\124\1\125\1\126\2\113\1\127\2\113\1\130"+
    "\2\113\1\131\1\132\1\133\1\134\1\135\1\136\1\137"+
    "\5\113\1\140\2\141\1\140\1\142\1\141\1\143\2\140"+
    "\1\144\1\145\1\140\1\143\1\146\1\147\1\143\11\150"+
    "\1\144\1\151\1\143\1\152\4\153\1\154\1\155\1\156"+
    "\1\157\2\153\1\160\2\153\1\161\2\153\1\162\1\163"+
    "\1\164\1\165\1\166\1\167\1\170\3\153\1\144\1\171"+
    "\1\172\2\141\1\172\1\142\1\141\1\173\2\172\1\141"+
    "\1\174\1\172\1\173\1\175\1\172\1\173\11\150\1\141"+
    "\1\176\1\173\1\177\4\172\1\200\1\201\1\202\1\203"+
    "\2\172\1\204\2\172\1\205\2\172\1\206\1\207\1\210"+
    "\1\211\1\212\1\213\1\214\3\172\1\141\1\215\2\71"+
    "\1\216\1\71\1\217\2\71\1\220\3\71\1\221\25\71"+
    "\1\76\1\77\1\100\1\101\2\71\1\102\2\71\1\103"+
    "\2\71\1\104\1\105\1\106\1\107\1\110\1\111\1\112"+
    "\5\71\2\222\1\223\1\222\1\224\7\222\1\225\24\222"+
    "\1\226\1\227\1\230\1\231\2\222\1\232\2\222\1\233"+
    "\2\222\1\234\1\235\1\236\1\237\1\240\1\241\1\242"+
    "\5\222\2\243\1\244\1\243\1\245\34\243\1\246\1\247"+
    "\1\250\1\251\2\243\1\252\2\243\1\253\2\243\1\254"+
    "\1\255\1\256\1\257\1\260\1\261\1\262\5\243\1\263"+
    "\2\264\1\263\1\265\1\264\33\263\1\266\1\267\1\270"+
    "\1\271\2\263\1\272\2\263\1\273\2\263\1\274\1\275"+
    "\1\276\1\277\1\300\1\301\1\302\5\263\7\303\1\244"+
    "\3\303\1\244\25\303\1\304\1\305\1\306\1\307\2\303"+
    "\1\310\2\303\1\311\2\303\1\312\1\313\1\314\1\315"+
    "\1\316\1\317\1\320\5\303\1\321\2\114\1\321\1\115"+
    "\1\114\1\321\1\117\3\321\1\116\4\321\11\120\1\121"+
    "\3\321\1\122\1\321\2\122\1\123\1\124\1\125\1\126"+
    "\2\321\1\322\2\321\1\323\2\321\1\324\1\325\1\326"+
    "\1\327\1\330\1\331\1\332\5\321\7\243\1\244\31\243"+
    "\1\246\1\247\1\250\1\251\2\243\1\252\2\243\1\253"+
    "\2\243\1\254\1\255\1\256\1\257\1\260\1\261\1\262"+
    "\20\243\1\244\25\243\1\246\1\247\1\250\1\251\2\243"+
    "\1\252\2\243\1\253\2\243\1\254\1\255\1\256\1\257"+
    "\1\260\1\261\1\262\7\243\1\333\2\243\1\334\1\335"+
    "\1\243\1\336\1\337\1\340\1\243\1\341\1\335\1\342"+
    "\1\343\11\150\1\344\1\345\1\335\1\346\4\336\1\347"+
    "\1\350\1\351\1\352\2\336\1\353\2\336\1\354\2\336"+
    "\1\355\1\356\1\357\1\360\1\361\1\362\1\363\3\336"+
    "\1\364\1\365\2\243\1\366\2\243\1\334\1\367\1\243"+
    "\1\336\1\263\1\370\1\243\1\371\1\367\1\150\1\372"+
    "\11\150\1\373\1\374\1\367\1\375\4\336\1\347\1\350"+
    "\1\351\1\352\2\336\1\353\2\336\1\354\2\336\1\355"+
    "\1\356\1\357\1\360\1\361\1\362\1\363\3\336\1\373"+
    "\1\376\2\263\1\377\3\263\1\367\3\263\1\370\1\263"+
    "\1\371\1\367\1\150\1\367\11\150\1\263\1\374\1\367"+
    "\1\375\4\u0100\1\u0101\1\u0102\1\u0103\1\u0104\2\u0100\1\u0105"+
    "\2\u0100\1\u0106\2\u0100\1\u0107\1\u0108\1\u0109\1\u010a\1\u010b"+
    "\1\u010c\1\u010d\3\u0100\1\263\1\376\41\26\1\u010e\1\u010f"+
    "\1\u0110\1\u0111\2\26\1\u0112\2\26\1\u0113\2\26\1\u0114"+
    "\1\u0115\1\u0116\1\u0117\1\u0118\1\u0119\1\u011a\5\26\2\u011b"+
    "\1\u011c\13\u011b\1\u011d\1\u011b\12\u011d\7\u011b\1\u011e\1\u011f"+
    "\1\u0120\1\u0121\2\u011b\1\u0122\2\u011b\1\u0123\2\u011b\1\u0124"+
    "\1\u0125\1\u0126\1\u0127\1\u0128\1\u0129\1\u012a\5\u011b\6\26"+
    "\1\u012b\2\26\1\u012c\1\u012d\1\26\1\u012e\1\u012b\1\u012c"+
    "\1\u012b\11\26\1\u012c\1\u012f\1\u012b\1\u0130\4\u0131\1\u0132"+
    "\1\u0133\1\u0134\1\u0135\2\u0131\1\u0136\2\u0131\1\u0137\2\u0131"+
    "\1\u0138\1\u0139\1\u013a\1\u013b\1\u013c\1\u013d\1\u013e\3\u0131"+
    "\1\u012c\1\u013f\2\26\1\u0140\2\26\1\u0140\2\26\1\u0141"+
    "\24\26\4\u0141\1\u0142\1\u0143\1\u0144\1\u0145\2\u0141\1\u0146"+
    "\2\u0141\1\u0147\2\u0141\1\u0148\1\u0149\1\u014a\1\u014b\1\u014c"+
    "\1\u014d\1\u014e\3\u0141\4\26\1\u014f\2\26\1\u014f\1\u0150"+
    "\1\26\1\u0151\1\u0152\1\u0153\1\26\1\u0154\1\u0150\1\u0152"+
    "\1\u0150\11\26\1\u0152\1\u0155\1\u0150\1\u0156\4\u0151\1\u0157"+
    "\1\u0158\1\u0159\1\u015a\2\u0151\1\u015b\2\u0151\1\u015c\2\u0151"+
    "\1\u015d\1\u015e\1\u015f\1\u0160\1\u0161\1\u0162\1\u0163\3\u0151"+
    "\1\u0152\1\u0164\73\0\1\27\121\0\1\34\35\0\1\33"+
    "\7\0\1\33\7\0\11\33\4\0\32\33\14\0\1\34"+
    "\72\0\1\34\16\0\1\34\52\0\1\u0165\2\0\1\u0166"+
    "\12\0\1\34\53\0\1\u0167\1\0\11\44\54\0\1\u0168"+
    "\2\0\1\u0169\13\0\1\34\55\0\11\u016a\60\0\11\44"+
    "\72\0\2\34\70\0\2\34\34\0\1\33\7\0\1\33"+
    "\7\0\11\33\4\0\5\33\1\u016b\14\33\1\u016c\7\33"+
    "\2\0\1\33\7\0\1\33\7\0\11\33\4\0\2\33"+
    "\1\u016d\14\33\1\u016e\1\33\1\u016f\6\33\1\u0170\1\33"+
    "\2\0\1\33\7\0\1\33\7\0\11\33\4\0\2\33"+
    "\1\u0171\14\33\1\u0172\12\33\2\0\1\33\7\0\1\33"+
    "\7\0\11\33\4\0\2\33\1\u0173\3\33\1\u0174\10\33"+
    "\1\u016c\12\33\2\0\1\33\7\0\1\33\7\0\11\33"+
    "\4\0\14\33\1\u0175\1\33\1\u0176\4\33\1\u0177\6\33"+
    "\2\0\1\33\7\0\1\33\7\0\11\33\4\0\2\33"+
    "\1\u0178\7\33\1\u0179\4\33\1\u017a\1\33\1\u017b\2\33"+
    "\1\u017c\5\33\2\0\1\33\7\0\1\33\7\0\11\33"+
    "\4\0\6\33\1\u017d\10\33\1\u017e\12\33\2\0\1\33"+
    "\7\0\1\33\7\0\11\33\4\0\7\33\1\u016c\5\33"+
    "\1\u017f\1\u0180\13\33\2\0\1\33\7\0\1\33\7\0"+
    "\11\33\4\0\2\33\1\u0181\7\33\1\u0182\4\33\1\u0183"+
    "\12\33\2\0\1\33\7\0\1\33\7\0\11\33\4\0"+
    "\2\33\1\u0184\16\33\1\u0185\2\33\1\u0186\5\33\2\0"+
    "\1\33\7\0\1\33\7\0\11\33\4\0\6\33\1\u0187"+
    "\23\33\2\0\1\33\7\0\1\33\7\0\11\33\4\0"+
    "\6\33\1\u0188\10\33\1\u0189\3\33\1\u018a\5\33\1\u018b"+
    "\2\0\1\33\7\0\1\33\7\0\11\33\4\0\11\33"+
    "\1\u018c\7\33\1\u018d\10\33\2\0\1\33\7\0\1\33"+
    "\7\0\11\33\4\0\7\33\1\u018e\2\33\1\u018f\17\33"+
    "\2\0\1\33\7\0\1\33\7\0\11\33\4\0\2\33"+
    "\1\u017a\7\33\1\u0190\17\33\2\0\1\33\7\0\1\33"+
    "\7\0\11\33\4\0\6\33\1\u0191\2\33\1\u0192\20\33"+
    "\2\0\1\33\7\0\1\33\7\0\11\33\4\0\6\33"+
    "\1\u0193\23\33\72\0\1\34\2\71\1\0\1\71\1\0"+
    "\2\71\1\0\3\71\1\0\55\71\2\0\1\72\66\0"+
    "\2\71\1\0\1\71\1\0\2\71\1\0\3\71\1\0"+
    "\40\71\1\u0194\16\71\1\0\1\71\1\0\2\71\1\0"+
    "\3\71\1\0\27\71\1\u0195\10\71\1\u0196\16\71\1\0"+
    "\1\71\1\0\2\71\1\0\3\71\1\0\35\71\1\u0197"+
    "\1\71\1\u0198\17\71\1\0\1\71\1\0\2\71\1\0"+
    "\3\71\1\0\23\71\1\u0199\14\71\1\u019a\1\71\1\u019b"+
    "\2\71\1\u019c\11\71\1\0\1\71\1\0\2\71\1\0"+
    "\3\71\1\0\30\71\1\u0196\5\71\1\u019d\1\u019e\17\71"+
    "\1\0\1\71\1\0\2\71\1\0\3\71\1\0\23\71"+
    "\1\u019f\14\71\1\u01a0\16\71\1\0\1\71\1\0\2\71"+
    "\1\0\3\71\1\0\23\71\1\u01a1\16\71\1\u01a2\2\71"+
    "\1\u01a3\11\71\1\0\1\71\1\0\2\71\1\0\3\71"+
    "\1\0\27\71\1\u01a4\27\71\1\0\1\71\1\0\2\71"+
    "\1\0\3\71\1\0\40\71\1\u01a5\3\71\1\u01a6\12\71"+
    "\1\0\1\71\1\0\2\71\1\0\3\71\1\0\32\71"+
    "\1\u01a7\7\71\1\u01a8\14\71\1\0\1\71\1\0\2\71"+
    "\1\0\3\71\1\0\30\71\1\u01a9\2\71\1\u01aa\23\71"+
    "\1\0\1\71\1\0\2\71\1\0\3\71\1\0\23\71"+
    "\1\u019a\7\71\1\u01ab\23\71\1\0\1\71\1\0\2\71"+
    "\1\0\3\71\1\0\32\71\1\u01ac\22\71\2\0\1\114"+
    "\106\0\11\120\75\0\1\122\1\0\6\122\61\0\1\122"+
    "\1\0\6\122\7\0\1\u01ad\51\0\1\122\1\0\4\122"+
    "\1\u01ae\1\122\7\0\1\u01af\51\0\1\122\1\0\6\122"+
    "\4\0\1\u01b0\1\0\1\u01b1\52\0\1\122\1\0\1\u01b2"+
    "\5\122\7\0\1\u01b3\1\0\1\u01b4\2\0\1\u01b5\53\0"+
    "\1\u01af\5\0\1\u01b6\1\u01b7\54\0\1\u01b8\14\0\1\u01b9"+
    "\53\0\1\u01ba\16\0\1\u01bb\2\0\1\u01bc\52\0\1\u01bd"+
    "\101\0\1\u01be\3\0\1\u01bf\56\0\1\u01c0\7\0\1\u01c1"+
    "\56\0\1\u01c2\2\0\1\u01c3\60\0\1\u01b3\7\0\1\u01c4"+
    "\67\0\1\u01c5\24\0\1\141\121\0\1\144\47\0\1\144"+
    "\74\0\1\u01c6\72\0\11\150\72\0\2\144\70\0\2\144"+
    "\71\0\32\153\37\0\17\153\1\u01c7\12\153\37\0\6\153"+
    "\1\u01c8\10\153\1\u01c9\12\153\37\0\14\153\1\u01ca\1\153"+
    "\1\u01cb\13\153\37\0\2\153\1\u01cc\14\153\1\u01cd\1\153"+
    "\1\u01ce\2\153\1\u01cf\5\153\37\0\7\153\1\u01c9\5\153"+
    "\1\u01d0\1\u01d1\13\153\37\0\2\153\1\u01d2\14\153\1\u01d3"+
    "\12\153\37\0\2\153\1\u01d4\16\153\1\u01d5\2\153\1\u01d6"+
    "\5\153\37\0\6\153\1\u01d7\23\153\37\0\17\153\1\u01d8"+
    "\3\153\1\u01d9\6\153\37\0\11\153\1\u01da\7\153\1\u01db"+
    "\10\153\37\0\7\153\1\u01dc\2\153\1\u01dd\17\153\37\0"+
    "\2\153\1\u01cd\7\153\1\u01de\17\153\37\0\11\153\1\u01df"+
    "\20\153\72\0\1\144\33\0\1\141\47\0\1\141\110\0"+
    "\2\141\70\0\2\141\110\0\1\u01ad\57\0\1\u01e0\10\0"+
    "\1\u01af\65\0\1\u01b0\1\0\1\u01b1\54\0\1\u01e1\14\0"+
    "\1\u01b3\1\0\1\u01b4\2\0\1\u01b5\77\0\1\141\2\0"+
    "\1\216\66\0\2\u01e2\1\223\1\u01e2\1\224\64\u01e2\2\0"+
    "\1\223\66\0\2\u01e3\1\243\1\u01e3\1\u01e4\12\u01e3\1\u01e5"+
    "\51\u01e3\2\u01e2\1\223\1\u01e2\1\224\47\u01e2\1\u01e6\16\u01e2"+
    "\1\223\1\u01e2\1\224\36\u01e2\1\u01e7\10\u01e2\1\u01e8\16\u01e2"+
    "\1\223\1\u01e2\1\224\44\u01e2\1\u01e9\1\u01e2\1\u01ea\17\u01e2"+
    "\1\223\1\u01e2\1\224\32\u01e2\1\u01eb\14\u01e2\1\u01ec\1\u01e2"+
    "\1\u01ed\2\u01e2\1\u01ee\11\u01e2\1\223\1\u01e2\1\224\37\u01e2"+
    "\1\u01e8\5\u01e2\1\u01ef\1\u01f0\17\u01e2\1\223\1\u01e2\1\224"+
    "\32\u01e2\1\u01f1\14\u01e2\1\u01f2\16\u01e2\1\223\1\u01e2\1\224"+
    "\32\u01e2\1\u01f3\16\u01e2\1\u01f4\2\u01e2\1\u01f5\11\u01e2\1\223"+
    "\1\u01e2\1\224\36\u01e2\1\u01f6\27\u01e2\1\223\1\u01e2\1\224"+
    "\47\u01e2\1\u01f7\3\u01e2\1\u01f8\12\u01e2\1\223\1\u01e2\1\224"+
    "\41\u01e2\1\u01f9\7\u01e2\1\u01fa\14\u01e2\1\223\1\u01e2\1\224"+
    "\37\u01e2\1\u01fb\2\u01e2\1\u01fc\23\u01e2\1\223\1\u01e2\1\224"+
    "\32\u01e2\1\u01ec\7\u01e2\1\u01fd\23\u01e2\1\223\1\u01e2\1\224"+
    "\41\u01e2\1\u01fe\22\u01e2\2\0\1\244\70\0\1\264\66\0"+
    "\7\303\1\0\3\303\1\0\64\303\1\0\3\303\1\0"+
    "\40\303\1\u01ff\23\303\1\0\3\303\1\0\27\303\1\u0200"+
    "\10\303\1\u0201\23\303\1\0\3\303\1\0\35\303\1\u0202"+
    "\1\303\1\u0203\24\303\1\0\3\303\1\0\23\303\1\u0204"+
    "\14\303\1\u0205\1\303\1\u0206\2\303\1\u0207\16\303\1\0"+
    "\3\303\1\0\30\303\1\u0201\5\303\1\u0208\1\u0209\24\303"+
    "\1\0\3\303\1\0\23\303\1\u020a\14\303\1\u020b\23\303"+
    "\1\0\3\303\1\0\23\303\1\u020c\16\303\1\u020d\2\303"+
    "\1\u020e\16\303\1\0\3\303\1\0\27\303\1\u020f\34\303"+
    "\1\0\3\303\1\0\40\303\1\u0210\3\303\1\u0211\17\303"+
    "\1\0\3\303\1\0\32\303\1\u0212\7\303\1\u0213\21\303"+
    "\1\0\3\303\1\0\30\303\1\u0214\2\303\1\u0215\30\303"+
    "\1\0\3\303\1\0\23\303\1\u0205\7\303\1\u0216\30\303"+
    "\1\0\3\303\1\0\32\303\1\u0217\22\303\5\0\1\334"+
    "\116\0\1\337\35\0\1\336\7\0\1\336\7\0\11\336"+
    "\4\0\32\336\14\0\1\337\72\0\1\337\16\0\1\337"+
    "\37\0\1\u0218\14\0\1\u0219\103\0\2\337\70\0\2\337"+
    "\34\0\1\336\7\0\1\336\7\0\11\336\4\0\17\336"+
    "\1\u021a\12\336\2\0\1\336\7\0\1\336\7\0\11\336"+
    "\4\0\6\336\1\u021b\10\336\1\u021c\12\336\2\0\1\336"+
    "\7\0\1\336\7\0\11\336\4\0\14\336\1\u021d\1\336"+
    "\1\u021e\13\336\2\0\1\336\7\0\1\336\7\0\11\336"+
    "\4\0\2\336\1\u021f\14\336\1\u0220\1\336\1\u0221\2\336"+
    "\1\u0222\5\336\2\0\1\336\7\0\1\336\7\0\11\336"+
    "\4\0\7\336\1\u021c\5\336\1\u0223\1\u0224\13\336\2\0"+
    "\1\336\7\0\1\336\7\0\11\336\4\0\2\336\1\u0225"+
    "\14\336\1\u0226\12\336\2\0\1\336\7\0\1\336\7\0"+
    "\11\336\4\0\2\336\1\u0227\16\336\1\u0228\2\336\1\u0229"+
    "\5\336\2\0\1\336\7\0\1\336\7\0\11\336\4\0"+
    "\6\336\1\u022a\23\336\2\0\1\336\7\0\1\336\7\0"+
    "\11\336\4\0\17\336\1\u022b\3\336\1\u022c\6\336\2\0"+
    "\1\336\7\0\1\336\7\0\11\336\4\0\11\336\1\u022d"+
    "\7\336\1\u022e\10\336\2\0\1\336\7\0\1\336\7\0"+
    "\11\336\4\0\7\336\1\u022f\2\336\1\u0230\17\336\2\0"+
    "\1\336\7\0\1\336\7\0\11\336\4\0\2\336\1\u0220"+
    "\7\336\1\u0231\17\336\2\0\1\336\7\0\1\336\7\0"+
    "\11\336\4\0\11\336\1\u0232\20\336\72\0\1\337\33\0"+
    "\1\263\47\0\1\263\72\0\1\263\16\0\1\263\54\0"+
    "\1\u0233\13\0\1\263\37\0\1\u0234\14\0\1\u0235\103\0"+
    "\2\263\70\0\2\263\124\0\1\263\35\0\32\u0100\37\0"+
    "\17\u0100\1\u0236\12\u0100\37\0\6\u0100\1\u0237\10\u0100\1\u0238"+
    "\12\u0100\37\0\14\u0100\1\u0239\1\u0100\1\u023a\13\u0100\37\0"+
    "\2\u0100\1\u023b\14\u0100\1\u023c\1\u0100\1\u023d\2\u0100\1\u023e"+
    "\5\u0100\37\0\7\u0100\1\u0238\5\u0100\1\u023f\1\u0240\13\u0100"+
    "\37\0\2\u0100\1\u0241\14\u0100\1\u0242\12\u0100\37\0\2\u0100"+
    "\1\u0243\16\u0100\1\u0244\2\u0100\1\u0245\5\u0100\37\0\6\u0100"+
    "\1\u0246\23\u0100\37\0\17\u0100\1\u0247\3\u0100\1\u0248\6\u0100"+
    "\37\0\11\u0100\1\u0249\7\u0100\1\u024a\10\u0100\37\0\7\u0100"+
    "\1\u024b\2\u0100\1\u024c\17\u0100\37\0\2\u0100\1\u023c\7\u0100"+
    "\1\u024d\17\u0100\37\0\11\u0100\1\u024e\20\u0100\20\0\1\u011d"+
    "\1\0\12\u011d\11\0\1\u011d\43\0\1\u011d\1\0\12\u011d"+
    "\11\0\1\u011d\5\0\1\u01b0\1\0\1\u01b1\50\0\1\u012c"+
    "\47\0\1\u012c\72\0\1\u012c\16\0\1\u012c\67\0\2\u012c"+
    "\70\0\2\u012c\71\0\32\u0131\37\0\17\u0131\1\u024f\12\u0131"+
    "\37\0\6\u0131\1\u0250\10\u0131\1\u0251\12\u0131\37\0\14\u0131"+
    "\1\u0252\1\u0131\1\u0253\13\u0131\37\0\2\u0131\1\u0254\14\u0131"+
    "\1\u0255\1\u0131\1\u0256\2\u0131\1\u0257\5\u0131\37\0\7\u0131"+
    "\1\u0251\5\u0131\1\u0258\1\u0259\13\u0131\37\0\2\u0131\1\u025a"+
    "\14\u0131\1\u025b\12\u0131\37\0\2\u0131\1\u025c\16\u0131\1\u025d"+
    "\2\u0131\1\u025e\5\u0131\37\0\6\u0131\1\u025f\23\u0131\37\0"+
    "\17\u0131\1\u0260\3\u0131\1\u0261\6\u0131\37\0\11\u0131\1\u0262"+
    "\7\u0131\1\u0263\10\u0131\37\0\7\u0131\1\u0264\2\u0131\1\u0265"+
    "\17\u0131\37\0\2\u0131\1\u0255\7\u0131\1\u0266\17\u0131\37\0"+
    "\11\u0131\1\u0267\20\u0131\72\0\1\u012c\1\u0141\7\0\1\u0141"+
    "\7\0\11\u0141\4\0\32\u0141\2\0\1\u0141\7\0\1\u0141"+
    "\7\0\11\u0141\4\0\17\u0141\1\u0268\12\u0141\2\0\1\u0141"+
    "\7\0\1\u0141\7\0\11\u0141\4\0\6\u0141\1\u0269\10\u0141"+
    "\1\u026a\12\u0141\2\0\1\u0141\7\0\1\u0141\7\0\11\u0141"+
    "\4\0\14\u0141\1\u026b\1\u0141\1\u026c\13\u0141\2\0\1\u0141"+
    "\7\0\1\u0141\7\0\11\u0141\4\0\2\u0141\1\u026d\14\u0141"+
    "\1\u026e\1\u0141\1\u026f\2\u0141\1\u0270\5\u0141\2\0\1\u0141"+
    "\7\0\1\u0141\7\0\11\u0141\4\0\7\u0141\1\u026a\5\u0141"+
    "\1\u0271\1\u0272\13\u0141\2\0\1\u0141\7\0\1\u0141\7\0"+
    "\11\u0141\4\0\2\u0141\1\u0273\14\u0141\1\u0274\12\u0141\2\0"+
    "\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0\2\u0141\1\u0275"+
    "\16\u0141\1\u0276\2\u0141\1\u0277\5\u0141\2\0\1\u0141\7\0"+
    "\1\u0141\7\0\11\u0141\4\0\6\u0141\1\u0278\23\u0141\2\0"+
    "\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0\17\u0141\1\u0279"+
    "\3\u0141\1\u027a\6\u0141\2\0\1\u0141\7\0\1\u0141\7\0"+
    "\11\u0141\4\0\11\u0141\1\u027b\7\u0141\1\u027c\10\u0141\2\0"+
    "\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0\7\u0141\1\u027d"+
    "\2\u0141\1\u027e\17\u0141\2\0\1\u0141\7\0\1\u0141\7\0"+
    "\11\u0141\4\0\2\u0141\1\u026e\7\u0141\1\u027f\17\u0141\2\0"+
    "\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0\11\u0141\1\u0280"+
    "\20\u0141\35\0\1\u0152\35\0\1\u0151\7\0\1\u0151\7\0"+
    "\11\u0151\4\0\32\u0151\14\0\1\u0152\72\0\1\u0152\16\0"+
    "\1\u0152\67\0\2\u0152\70\0\2\u0152\34\0\1\u0151\7\0"+
    "\1\u0151\7\0\11\u0151\4\0\17\u0151\1\u0281\12\u0151\2\0"+
    "\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0\6\u0151\1\u0282"+
    "\10\u0151\1\u0283\12\u0151\2\0\1\u0151\7\0\1\u0151\7\0"+
    "\11\u0151\4\0\14\u0151\1\u0284\1\u0151\1\u0285\13\u0151\2\0"+
    "\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0\2\u0151\1\u0286"+
    "\14\u0151\1\u0287\1\u0151\1\u0288\2\u0151\1\u0289\5\u0151\2\0"+
    "\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0\7\u0151\1\u0283"+
    "\5\u0151\1\u028a\1\u028b\13\u0151\2\0\1\u0151\7\0\1\u0151"+
    "\7\0\11\u0151\4\0\2\u0151\1\u028c\14\u0151\1\u028d\12\u0151"+
    "\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0\2\u0151"+
    "\1\u028e\16\u0151\1\u028f\2\u0151\1\u0290\5\u0151\2\0\1\u0151"+
    "\7\0\1\u0151\7\0\11\u0151\4\0\6\u0151\1\u0291\23\u0151"+
    "\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0\17\u0151"+
    "\1\u0292\3\u0151\1\u0293\6\u0151\2\0\1\u0151\7\0\1\u0151"+
    "\7\0\11\u0151\4\0\11\u0151\1\u0294\7\u0151\1\u0295\10\u0151"+
    "\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0\7\u0151"+
    "\1\u0296\2\u0151\1\u0297\17\u0151\2\0\1\u0151\7\0\1\u0151"+
    "\7\0\11\u0151\4\0\2\u0151\1\u0287\7\u0151\1\u0298\17\u0151"+
    "\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0\11\u0151"+
    "\1\u0299\20\u0151\72\0\1\u0152\15\0\1\u0165\2\0\1\u0166"+
    "\66\0\1\u0167\52\0\1\33\7\0\1\33\7\0\11\33"+
    "\4\0\5\33\1\u029a\24\33\2\0\1\33\7\0\1\33"+
    "\7\0\11\33\4\0\14\33\1\u029b\15\33\2\0\1\33"+
    "\7\0\1\33\7\0\11\33\4\0\17\33\1\u029c\12\33"+
    "\2\0\1\33\7\0\1\33\7\0\11\33\4\0\6\33"+
    "\1\u029d\23\33\2\0\1\33\7\0\1\33\7\0\11\33"+
    "\4\0\23\33\1\u029e\6\33\2\0\1\33\7\0\1\33"+
    "\7\0\11\33\4\0\14\33\1\u029f\15\33\2\0\1\33"+
    "\7\0\1\33\7\0\11\33\4\0\16\33\1\u02a0\13\33"+
    "\2\0\1\33\7\0\1\33\7\0\11\33\4\0\30\33"+
    "\1\u02a1\1\33\2\0\1\33\7\0\1\33\7\0\11\33"+
    "\4\0\14\33\1\u02a2\15\33\2\0\1\33\7\0\1\33"+
    "\7\0\11\33\4\0\22\33\1\u02a3\7\33\2\0\1\33"+
    "\7\0\1\33\7\0\11\33\4\0\24\33\1\u02a4\5\33"+
    "\2\0\1\33\7\0\1\33\7\0\11\33\4\0\11\33"+
    "\1\u02a5\20\33\2\0\1\33\7\0\1\33\7\0\11\33"+
    "\4\0\14\33\1\u0175\15\33\2\0\1\33\7\0\1\33"+
    "\7\0\11\33\4\0\16\33\1\u02a6\13\33\2\0\1\33"+
    "\7\0\1\33\7\0\11\33\4\0\21\33\1\u016c\10\33"+
    "\2\0\1\33\7\0\1\33\7\0\11\33\4\0\17\33"+
    "\1\u02a4\12\33\2\0\1\33\7\0\1\33\7\0\11\33"+
    "\4\0\16\33\1\u02a7\13\33\2\0\1\33\7\0\1\33"+
    "\7\0\11\33\4\0\27\33\1\u02a8\2\33\2\0\1\33"+
    "\7\0\1\33\7\0\11\33\4\0\24\33\1\u02a9\5\33"+
    "\2\0\1\33\7\0\1\33\7\0\11\33\4\0\20\33"+
    "\1\u02aa\11\33\2\0\1\33\7\0\1\33\7\0\11\33"+
    "\4\0\23\33\1\u02ab\6\33\2\0\1\33\7\0\1\33"+
    "\7\0\11\33\4\0\20\33\1\u02ac\11\33\2\0\1\33"+
    "\7\0\1\33\7\0\11\33\4\0\16\33\1\u02ad\13\33"+
    "\2\0\1\33\7\0\1\33\7\0\11\33\4\0\5\33"+
    "\1\u02ae\24\33\2\0\1\33\7\0\1\33\7\0\11\33"+
    "\4\0\30\33\1\u02af\1\33\2\0\1\33\7\0\1\33"+
    "\7\0\11\33\4\0\2\33\1\u02b0\7\33\1\u02b1\17\33"+
    "\2\0\1\33\7\0\1\33\7\0\11\33\4\0\3\33"+
    "\1\u02b2\26\33\2\0\1\33\7\0\1\33\7\0\11\33"+
    "\4\0\23\33\1\u02b3\6\33\2\0\1\33\7\0\1\33"+
    "\7\0\11\33\4\0\4\33\1\u02b4\11\33\1\u02b5\13\33"+
    "\2\0\1\33\7\0\1\33\7\0\11\33\4\0\14\33"+
    "\1\u02b6\15\33\2\0\1\33\7\0\1\33\7\0\11\33"+
    "\4\0\21\33\1\u02b7\10\33\2\0\1\33\7\0\1\33"+
    "\7\0\11\33\4\0\2\33\1\u02b8\27\33\2\0\1\33"+
    "\7\0\1\33\7\0\11\33\4\0\12\33\1\u02b9\17\33"+
    "\2\0\1\33\7\0\1\33\7\0\11\33\4\0\2\33"+
    "\1\u02ba\21\33\1\u02a3\5\33\2\0\1\33\7\0\1\33"+
    "\7\0\11\33\4\0\12\33\1\u02bb\17\33\2\0\1\33"+
    "\7\0\1\33\7\0\11\33\4\0\16\33\1\u02bc\13\33"+
    "\2\0\1\33\7\0\1\33\7\0\11\33\4\0\6\33"+
    "\1\u02bd\23\33\2\0\1\33\7\0\1\33\7\0\11\33"+
    "\4\0\6\33\1\u02be\3\33\1\u02bf\17\33\2\0\1\33"+
    "\7\0\1\33\7\0\11\33\4\0\12\33\1\u02c0\17\33"+
    "\2\0\1\33\7\0\1\33\7\0\11\33\4\0\2\33"+
    "\1\u02a9\27\33\2\0\2\71\1\0\1\71\1\0\2\71"+
    "\1\0\3\71\1\0\37\71\1\u02c1\17\71\1\0\1\71"+
    "\1\0\2\71\1\0\3\71\1\0\35\71\1\u02c2\21\71"+
    "\1\0\1\71\1\0\2\71\1\0\3\71\1\0\43\71"+
    "\1\u02c3\13\71\1\0\1\71\1\0\2\71\1\0\3\71"+
    "\1\0\45\71\1\u02c4\11\71\1\0\1\71\1\0\2\71"+
    "\1\0\3\71\1\0\35\71\1\u0197\21\71\1\0\1\71"+
    "\1\0\2\71\1\0\3\71\1\0\42\71\1\u0196\14\71"+
    "\1\0\1\71\1\0\2\71\1\0\3\71\1\0\40\71"+
    "\1\u02c4\16\71\1\0\1\71\1\0\2\71\1\0\3\71"+
    "\1\0\37\71\1\u02c5\17\71\1\0\1\71\1\0\2\71"+
    "\1\0\3\71\1\0\41\71\1\u02c6\15\71\1\0\1\71"+
    "\1\0\2\71\1\0\3\71\1\0\44\71\1\u02c7\12\71"+
    "\1\0\1\71\1\0\2\71\1\0\3\71\1\0\41\71"+
    "\1\u02c8\15\71\1\0\1\71\1\0\2\71\1\0\3\71"+
    "\1\0\26\71\1\u02c9\30\71\1\0\1\71\1\0\2\71"+
    "\1\0\3\71\1\0\51\71\1\u02ca\5\71\1\0\1\71"+
    "\1\0\2\71\1\0\3\71\1\0\23\71\1\u02cb\7\71"+
    "\1\u02cc\23\71\1\0\1\71\1\0\2\71\1\0\3\71"+
    "\1\0\24\71\1\u02cd\32\71\1\0\1\71\1\0\2\71"+
    "\1\0\3\71\1\0\44\71\1\u02ce\12\71\1\0\1\71"+
    "\1\0\2\71\1\0\3\71\1\0\35\71\1\u02cf\21\71"+
    "\1\0\1\71\1\0\2\71\1\0\3\71\1\0\42\71"+
    "\1\u02d0\14\71\1\0\1\71\1\0\2\71\1\0\3\71"+
    "\1\0\33\71\1\u02d1\23\71\1\0\1\71\1\0\2\71"+
    "\1\0\3\71\1\0\45\71\1\u02c3\11\71\1\0\1\71"+
    "\1\0\2\71\1\0\3\71\1\0\33\71\1\u02d2\23\71"+
    "\1\0\1\71\1\0\2\71\1\0\3\71\1\0\37\71"+
    "\1\u02d3\17\71\1\0\1\71\1\0\2\71\1\0\3\71"+
    "\1\0\27\71\1\u02d4\27\71\1\0\1\71\1\0\2\71"+
    "\1\0\3\71\1\0\33\71\1\u02d5\21\71\53\0\1\u02d6"+
    "\52\0\1\122\1\0\6\122\4\0\1\u02d7\76\0\1\u02d8"+
    "\72\0\1\u02d9\44\0\1\122\1\0\6\122\4\0\1\u01b0"+
    "\75\0\1\u01af\66\0\1\u02d9\67\0\1\u02da\72\0\1\u02db"+
    "\73\0\1\u02dc\65\0\1\u02dd\55\0\1\u02de\113\0\1\u02df"+
    "\42\0\1\u02e0\7\0\1\u02e1\61\0\1\u02e2\110\0\1\u02e3"+
    "\61\0\1\u02e4\75\0\1\u02e5\61\0\1\u02e6\102\0\1\u02d8"+
    "\56\0\1\u02e7\74\0\1\u02e8\60\0\1\u02e9\74\0\1\u02ea"+
    "\37\0\1\u02eb\107\0\16\153\1\u02ec\13\153\37\0\14\153"+
    "\1\u02ed\15\153\37\0\22\153\1\u02ee\7\153\37\0\24\153"+
    "\1\u02ef\5\153\37\0\14\153\1\u01ca\15\153\37\0\21\153"+
    "\1\u01c9\10\153\37\0\17\153\1\u02ef\12\153\37\0\16\153"+
    "\1\u02f0\13\153\37\0\20\153\1\u02f1\11\153\37\0\23\153"+
    "\1\u02f2\6\153\37\0\20\153\1\u02f3\11\153\37\0\5\153"+
    "\1\u02f4\24\153\37\0\30\153\1\u02f5\1\153\37\0\2\153"+
    "\1\u02f6\7\153\1\u02f7\17\153\37\0\3\153\1\u02f8\26\153"+
    "\37\0\23\153\1\u02f9\6\153\37\0\14\153\1\u02fa\15\153"+
    "\37\0\21\153\1\u02fb\10\153\37\0\12\153\1\u02fc\17\153"+
    "\37\0\24\153\1\u02ee\5\153\37\0\12\153\1\u02fd\17\153"+
    "\37\0\16\153\1\u02fe\13\153\37\0\6\153\1\u02ff\23\153"+
    "\37\0\12\153\1\u0300\17\153\53\0\1\u02d7\70\0\1\u01b0"+
    "\17\0\2\u01e3\1\243\1\u01e3\1\u01e4\64\u01e3\2\0\1\243"+
    "\66\0\2\u01e2\1\223\1\u01e2\1\224\46\u01e2\1\u0301\17\u01e2"+
    "\1\223\1\u01e2\1\224\44\u01e2\1\u0302\21\u01e2\1\223\1\u01e2"+
    "\1\224\52\u01e2\1\u0303\13\u01e2\1\223\1\u01e2\1\224\54\u01e2"+
    "\1\u0304\11\u01e2\1\223\1\u01e2\1\224\44\u01e2\1\u01e9\21\u01e2"+
    "\1\223\1\u01e2\1\224\51\u01e2\1\u01e8\14\u01e2\1\223\1\u01e2"+
    "\1\224\47\u01e2\1\u0304\16\u01e2\1\223\1\u01e2\1\224\46\u01e2"+
    "\1\u0305\17\u01e2\1\223\1\u01e2\1\224\50\u01e2\1\u0306\15\u01e2"+
    "\1\223\1\u01e2\1\224\53\u01e2\1\u0307\12\u01e2\1\223\1\u01e2"+
    "\1\224\50\u01e2\1\u0308\15\u01e2\1\223\1\u01e2\1\224\35\u01e2"+
    "\1\u0309\30\u01e2\1\223\1\u01e2\1\224\60\u01e2\1\u030a\5\u01e2"+
    "\1\223\1\u01e2\1\224\32\u01e2\1\u030b\7\u01e2\1\u030c\23\u01e2"+
    "\1\223\1\u01e2\1\224\33\u01e2\1\u030d\32\u01e2\1\223\1\u01e2"+
    "\1\224\53\u01e2\1\u030e\12\u01e2\1\223\1\u01e2\1\224\44\u01e2"+
    "\1\u030f\21\u01e2\1\223\1\u01e2\1\224\51\u01e2\1\u0310\14\u01e2"+
    "\1\223\1\u01e2\1\224\42\u01e2\1\u0311\23\u01e2\1\223\1\u01e2"+
    "\1\224\54\u01e2\1\u0303\11\u01e2\1\223\1\u01e2\1\224\42\u01e2"+
    "\1\u0312\23\u01e2\1\223\1\u01e2\1\224\46\u01e2\1\u0313\17\u01e2"+
    "\1\223\1\u01e2\1\224\36\u01e2\1\u0314\27\u01e2\1\223\1\u01e2"+
    "\1\224\42\u01e2\1\u0315\21\u01e2\7\303\1\0\3\303\1\0"+
    "\37\303\1\u0316\24\303\1\0\3\303\1\0\35\303\1\u0317"+
    "\26\303\1\0\3\303\1\0\43\303\1\u0318\20\303\1\0"+
    "\3\303\1\0\45\303\1\u0319\16\303\1\0\3\303\1\0"+
    "\35\303\1\u0202\26\303\1\0\3\303\1\0\42\303\1\u0201"+
    "\21\303\1\0\3\303\1\0\40\303\1\u0319\23\303\1\0"+
    "\3\303\1\0\37\303\1\u031a\24\303\1\0\3\303\1\0"+
    "\41\303\1\u031b\22\303\1\0\3\303\1\0\44\303\1\u031c"+
    "\17\303\1\0\3\303\1\0\41\303\1\u031d\22\303\1\0"+
    "\3\303\1\0\26\303\1\u031e\35\303\1\0\3\303\1\0"+
    "\51\303\1\u031f\12\303\1\0\3\303\1\0\23\303\1\u0320"+
    "\7\303\1\u0321\30\303\1\0\3\303\1\0\24\303\1\u0322"+
    "\37\303\1\0\3\303\1\0\44\303\1\u0323\17\303\1\0"+
    "\3\303\1\0\35\303\1\u0324\26\303\1\0\3\303\1\0"+
    "\42\303\1\u0325\21\303\1\0\3\303\1\0\33\303\1\u0326"+
    "\30\303\1\0\3\303\1\0\45\303\1\u0318\16\303\1\0"+
    "\3\303\1\0\33\303\1\u0327\30\303\1\0\3\303\1\0"+
    "\37\303\1\u0328\24\303\1\0\3\303\1\0\27\303\1\u0329"+
    "\34\303\1\0\3\303\1\0\33\303\1\u032a\21\303\17\0"+
    "\1\u032b\51\0\1\336\7\0\1\336\7\0\11\336\4\0"+
    "\16\336\1\u032c\13\336\2\0\1\336\7\0\1\336\7\0"+
    "\11\336\4\0\14\336\1\u032d\15\336\2\0\1\336\7\0"+
    "\1\336\7\0\11\336\4\0\22\336\1\u032e\7\336\2\0"+
    "\1\336\7\0\1\336\7\0\11\336\4\0\24\336\1\u032f"+
    "\5\336\2\0\1\336\7\0\1\336\7\0\11\336\4\0"+
    "\14\336\1\u021d\15\336\2\0\1\336\7\0\1\336\7\0"+
    "\11\336\4\0\21\336\1\u021c\10\336\2\0\1\336\7\0"+
    "\1\336\7\0\11\336\4\0\17\336\1\u032f\12\336\2\0"+
    "\1\336\7\0\1\336\7\0\11\336\4\0\16\336\1\u0330"+
    "\13\336\2\0\1\336\7\0\1\336\7\0\11\336\4\0"+
    "\20\336\1\u0331\11\336\2\0\1\336\7\0\1\336\7\0"+
    "\11\336\4\0\23\336\1\u0332\6\336\2\0\1\336\7\0"+
    "\1\336\7\0\11\336\4\0\20\336\1\u0333\11\336\2\0"+
    "\1\336\7\0\1\336\7\0\11\336\4\0\5\336\1\u0334"+
    "\24\336\2\0\1\336\7\0\1\336\7\0\11\336\4\0"+
    "\30\336\1\u0335\1\336\2\0\1\336\7\0\1\336\7\0"+
    "\11\336\4\0\2\336\1\u0336\7\336\1\u0337\17\336\2\0"+
    "\1\336\7\0\1\336\7\0\11\336\4\0\3\336\1\u0338"+
    "\26\336\2\0\1\336\7\0\1\336\7\0\11\336\4\0"+
    "\23\336\1\u0339\6\336\2\0\1\336\7\0\1\336\7\0"+
    "\11\336\4\0\14\336\1\u033a\15\336\2\0\1\336\7\0"+
    "\1\336\7\0\11\336\4\0\21\336\1\u033b\10\336\2\0"+
    "\1\336\7\0\1\336\7\0\11\336\4\0\12\336\1\u033c"+
    "\17\336\2\0\1\336\7\0\1\336\7\0\11\336\4\0"+
    "\24\336\1\u032e\5\336\2\0\1\336\7\0\1\336\7\0"+
    "\11\336\4\0\12\336\1\u033d\17\336\2\0\1\336\7\0"+
    "\1\336\7\0\11\336\4\0\16\336\1\u033e\13\336\2\0"+
    "\1\336\7\0\1\336\7\0\11\336\4\0\6\336\1\u033f"+
    "\23\336\2\0\1\336\7\0\1\336\7\0\11\336\4\0"+
    "\12\336\1\u0340\17\336\21\0\1\u0341\106\0\16\u0100\1\u0342"+
    "\13\u0100\37\0\14\u0100\1\u0343\15\u0100\37\0\22\u0100\1\u0344"+
    "\7\u0100\37\0\24\u0100\1\u0345\5\u0100\37\0\14\u0100\1\u0239"+
    "\15\u0100\37\0\21\u0100\1\u0238\10\u0100\37\0\17\u0100\1\u0345"+
    "\12\u0100\37\0\16\u0100\1\u0346\13\u0100\37\0\20\u0100\1\u0347"+
    "\11\u0100\37\0\23\u0100\1\u0348\6\u0100\37\0\20\u0100\1\u0349"+
    "\11\u0100\37\0\5\u0100\1\u034a\24\u0100\37\0\30\u0100\1\u034b"+
    "\1\u0100\37\0\2\u0100\1\u034c\7\u0100\1\u034d\17\u0100\37\0"+
    "\3\u0100\1\u034e\26\u0100\37\0\23\u0100\1\u034f\6\u0100\37\0"+
    "\14\u0100\1\u0350\15\u0100\37\0\21\u0100\1\u0351\10\u0100\37\0"+
    "\12\u0100\1\u0352\17\u0100\37\0\24\u0100\1\u0344\5\u0100\37\0"+
    "\12\u0100\1\u0353\17\u0100\37\0\16\u0100\1\u0354\13\u0100\37\0"+
    "\6\u0100\1\u0355\23\u0100\37\0\12\u0100\1\u0356\17\u0100\37\0"+
    "\16\u0131\1\u0357\13\u0131\37\0\14\u0131\1\u0358\15\u0131\37\0"+
    "\22\u0131\1\u0359\7\u0131\37\0\24\u0131\1\u035a\5\u0131\37\0"+
    "\14\u0131\1\u0252\15\u0131\37\0\21\u0131\1\u0251\10\u0131\37\0"+
    "\17\u0131\1\u035a\12\u0131\37\0\16\u0131\1\u035b\13\u0131\37\0"+
    "\20\u0131\1\u035c\11\u0131\37\0\23\u0131\1\u035d\6\u0131\37\0"+
    "\20\u0131\1\u035e\11\u0131\37\0\5\u0131\1\u035f\24\u0131\37\0"+
    "\30\u0131\1\u0360\1\u0131\37\0\2\u0131\1\u0361\7\u0131\1\u0362"+
    "\17\u0131\37\0\3\u0131\1\u0363\26\u0131\37\0\23\u0131\1\u0364"+
    "\6\u0131\37\0\14\u0131\1\u0365\15\u0131\37\0\21\u0131\1\u0366"+
    "\10\u0131\37\0\12\u0131\1\u0367\17\u0131\37\0\24\u0131\1\u0359"+
    "\5\u0131\37\0\12\u0131\1\u0368\17\u0131\37\0\16\u0131\1\u0369"+
    "\13\u0131\37\0\6\u0131\1\u036a\23\u0131\37\0\12\u0131\1\u036b"+
    "\17\u0131\2\0\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0"+
    "\16\u0141\1\u036c\13\u0141\2\0\1\u0141\7\0\1\u0141\7\0"+
    "\11\u0141\4\0\14\u0141\1\u036d\15\u0141\2\0\1\u0141\7\0"+
    "\1\u0141\7\0\11\u0141\4\0\22\u0141\1\u036e\7\u0141\2\0"+
    "\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0\24\u0141\1\u036f"+
    "\5\u0141\2\0\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0"+
    "\14\u0141\1\u026b\15\u0141\2\0\1\u0141\7\0\1\u0141\7\0"+
    "\11\u0141\4\0\21\u0141\1\u026a\10\u0141\2\0\1\u0141\7\0"+
    "\1\u0141\7\0\11\u0141\4\0\17\u0141\1\u036f\12\u0141\2\0"+
    "\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0\16\u0141\1\u0370"+
    "\13\u0141\2\0\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0"+
    "\20\u0141\1\u0371\11\u0141\2\0\1\u0141\7\0\1\u0141\7\0"+
    "\11\u0141\4\0\23\u0141\1\u0372\6\u0141\2\0\1\u0141\7\0"+
    "\1\u0141\7\0\11\u0141\4\0\20\u0141\1\u0373\11\u0141\2\0"+
    "\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0\5\u0141\1\u0374"+
    "\24\u0141\2\0\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0"+
    "\30\u0141\1\u0375\1\u0141\2\0\1\u0141\7\0\1\u0141\7\0"+
    "\11\u0141\4\0\2\u0141\1\u0376\7\u0141\1\u0377\17\u0141\2\0"+
    "\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0\3\u0141\1\u0378"+
    "\26\u0141\2\0\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0"+
    "\23\u0141\1\u0379\6\u0141\2\0\1\u0141\7\0\1\u0141\7\0"+
    "\11\u0141\4\0\14\u0141\1\u037a\15\u0141\2\0\1\u0141\7\0"+
    "\1\u0141\7\0\11\u0141\4\0\21\u0141\1\u037b\10\u0141\2\0"+
    "\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0\12\u0141\1\u037c"+
    "\17\u0141\2\0\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0"+
    "\24\u0141\1\u036e\5\u0141\2\0\1\u0141\7\0\1\u0141\7\0"+
    "\11\u0141\4\0\12\u0141\1\u037d\17\u0141\2\0\1\u0141\7\0"+
    "\1\u0141\7\0\11\u0141\4\0\16\u0141\1\u037e\13\u0141\2\0"+
    "\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0\6\u0141\1\u037f"+
    "\23\u0141\2\0\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0"+
    "\12\u0141\1\u0380\17\u0141\2\0\1\u0151\7\0\1\u0151\7\0"+
    "\11\u0151\4\0\16\u0151\1\u0381\13\u0151\2\0\1\u0151\7\0"+
    "\1\u0151\7\0\11\u0151\4\0\14\u0151\1\u0382\15\u0151\2\0"+
    "\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0\22\u0151\1\u0383"+
    "\7\u0151\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0"+
    "\24\u0151\1\u0384\5\u0151\2\0\1\u0151\7\0\1\u0151\7\0"+
    "\11\u0151\4\0\14\u0151\1\u0284\15\u0151\2\0\1\u0151\7\0"+
    "\1\u0151\7\0\11\u0151\4\0\21\u0151\1\u0283\10\u0151\2\0"+
    "\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0\17\u0151\1\u0384"+
    "\12\u0151\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0"+
    "\16\u0151\1\u0385\13\u0151\2\0\1\u0151\7\0\1\u0151\7\0"+
    "\11\u0151\4\0\20\u0151\1\u0386\11\u0151\2\0\1\u0151\7\0"+
    "\1\u0151\7\0\11\u0151\4\0\23\u0151\1\u0387\6\u0151\2\0"+
    "\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0\20\u0151\1\u0388"+
    "\11\u0151\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0"+
    "\5\u0151\1\u0389\24\u0151\2\0\1\u0151\7\0\1\u0151\7\0"+
    "\11\u0151\4\0\30\u0151\1\u038a\1\u0151\2\0\1\u0151\7\0"+
    "\1\u0151\7\0\11\u0151\4\0\2\u0151\1\u038b\7\u0151\1\u038c"+
    "\17\u0151\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0"+
    "\3\u0151\1\u038d\26\u0151\2\0\1\u0151\7\0\1\u0151\7\0"+
    "\11\u0151\4\0\23\u0151\1\u038e\6\u0151\2\0\1\u0151\7\0"+
    "\1\u0151\7\0\11\u0151\4\0\14\u0151\1\u038f\15\u0151\2\0"+
    "\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0\21\u0151\1\u0390"+
    "\10\u0151\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0"+
    "\12\u0151\1\u0391\17\u0151\2\0\1\u0151\7\0\1\u0151\7\0"+
    "\11\u0151\4\0\24\u0151\1\u0383\5\u0151\2\0\1\u0151\7\0"+
    "\1\u0151\7\0\11\u0151\4\0\12\u0151\1\u0392\17\u0151\2\0"+
    "\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0\16\u0151\1\u0393"+
    "\13\u0151\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0"+
    "\6\u0151\1\u0394\23\u0151\2\0\1\u0151\7\0\1\u0151\7\0"+
    "\11\u0151\4\0\12\u0151\1\u0395\17\u0151\2\0\1\33\7\0"+
    "\1\33\7\0\11\33\4\0\21\33\1\u0396\10\33\2\0"+
    "\1\33\7\0\1\33\7\0\11\33\4\0\2\33\1\u0397"+
    "\27\33\2\0\1\33\7\0\1\33\7\0\11\33\4\0"+
    "\14\33\1\u016c\15\33\2\0\1\33\7\0\1\33\7\0"+
    "\11\33\4\0\2\33\1\u0398\27\33\2\0\1\33\7\0"+
    "\1\33\7\0\11\33\4\0\6\33\1\u0399\23\33\2\0"+
    "\1\33\7\0\1\33\7\0\11\33\4\0\14\33\1\u039a"+
    "\15\33\2\0\1\33\7\0\1\33\7\0\11\33\4\0"+
    "\22\33\1\u039b\1\u039c\6\33\2\0\1\33\7\0\1\33"+
    "\7\0\11\33\4\0\22\33\1\u02bf\7\33\2\0\1\33"+
    "\7\0\1\33\7\0\11\33\4\0\6\33\1\u039d\23\33"+
    "\2\0\1\33\7\0\1\33\7\0\11\33\4\0\6\33"+
    "\1\u016c\23\33\2\0\1\33\7\0\1\33\7\0\11\33"+
    "\4\0\15\33\1\u016c\14\33\2\0\1\33\7\0\1\33"+
    "\7\0\11\33\4\0\6\33\1\u039e\23\33\2\0\1\33"+
    "\7\0\1\33\7\0\11\33\4\0\16\33\1\u039f\13\33"+
    "\2\0\1\33\7\0\1\33\7\0\11\33\4\0\4\33"+
    "\1\u03a0\25\33\2\0\1\33\6\0\1\u03a1\1\33\2\0"+
    "\1\u03a2\4\0\11\33\4\0\32\33\2\0\1\33\7\0"+
    "\1\33\7\0\11\33\4\0\21\33\1\u02a1\10\33\2\0"+
    "\1\33\7\0\1\33\7\0\11\33\4\0\17\33\1\u03a3"+
    "\12\33\2\0\1\33\7\0\1\33\7\0\1\33\1\u03a4"+
    "\1\u03a5\1\u03a6\2\33\1\u03a7\1\33\1\u016c\4\0\6\33"+
    "\1\u03a8\23\33\2\0\1\33\7\0\1\33\7\0\11\33"+
    "\4\0\20\33\1\u03a9\11\33\2\0\1\33\7\0\1\33"+
    "\7\0\11\33\4\0\24\33\1\u03aa\5\33\2\0\1\33"+
    "\7\0\1\33\7\0\11\33\4\0\12\33\1\u03ab\17\33"+
    "\2\0\1\33\7\0\1\33\7\0\11\33\4\0\2\33"+
    "\1\u03ac\27\33\2\0\1\33\7\0\1\33\7\0\11\33"+
    "\4\0\10\33\1\u03ad\21\33\2\0\1\33\7\0\1\33"+
    "\7\0\11\33\4\0\25\33\1\u03ae\4\33\2\0\1\33"+
    "\7\0\1\33\7\0\11\33\4\0\14\33\1\u03af\15\33"+
    "\2\0\1\33\7\0\1\33\7\0\11\33\4\0\24\33"+
    "\1\u03b0\5\33\2\0\1\33\7\0\1\33\7\0\11\33"+
    "\4\0\17\33\1\u03b1\12\33\2\0\1\33\7\0\1\33"+
    "\7\0\11\33\4\0\5\33\1\u03b2\24\33\2\0\1\33"+
    "\7\0\1\33\7\0\11\33\4\0\12\33\1\u03b3\17\33"+
    "\2\0\1\33\7\0\1\33\7\0\11\33\4\0\12\33"+
    "\1\u03b4\11\33\1\u03b5\5\33\2\0\1\33\7\0\1\33"+
    "\7\0\11\33\4\0\3\33\1\u03b6\26\33\2\0\1\33"+
    "\7\0\1\33\7\0\11\33\4\0\22\33\1\u016c\7\33"+
    "\2\0\1\33\7\0\1\33\7\0\11\33\4\0\16\33"+
    "\1\u03b7\13\33\2\0\1\33\7\0\1\33\7\0\11\33"+
    "\4\0\27\33\1\u03b8\2\33\2\0\1\33\7\0\1\33"+
    "\7\0\11\33\4\0\23\33\1\u03b9\6\33\2\0\1\33"+
    "\7\0\1\33\7\0\11\33\4\0\26\33\1\u016c\3\33"+
    "\2\0\1\33\7\0\1\33\7\0\11\33\4\0\13\33"+
    "\1\u02a1\16\33\2\0\1\33\7\0\1\33\7\0\11\33"+
    "\4\0\14\33\1\u02a3\15\33\2\0\2\71\1\0\1\71"+
    "\1\0\2\71\1\0\3\71\1\0\43\71\1\u03ba\1\u03bb"+
    "\12\71\1\0\1\71\1\0\2\71\1\0\3\71\1\0"+
    "\27\71\1\u03bc\27\71\1\0\1\71\1\0\2\71\1\0"+
    "\3\71\1\0\27\71\1\u0196\27\71\1\0\1\71\1\0"+
    "\2\71\1\0\3\71\1\0\36\71\1\u0196\20\71\1\0"+
    "\1\71\1\0\2\71\1\0\3\71\1\0\25\71\1\u03bd"+
    "\31\71\1\0\1\71\1\0\2\71\1\0\3\71\1\0"+
    "\40\71\1\u03be\16\71\1\0\1\71\1\0\2\71\1\0"+
    "\3\71\1\0\5\71\1\u03bf\1\u03c0\1\u03c1\2\71\1\u03c2"+
    "\1\71\1\u0196\12\71\1\u03c3\27\71\1\0\1\71\1\0"+
    "\2\71\1\0\3\71\1\0\41\71\1\u03c4\15\71\1\0"+
    "\1\71\1\0\2\71\1\0\3\71\1\0\33\71\1\u03c5"+
    "\23\71\1\0\1\71\1\0\2\71\1\0\3\71\1\0"+
    "\23\71\1\u03c6\33\71\1\0\1\71\1\0\2\71\1\0"+
    "\3\71\1\0\31\71\1\u03c7\25\71\1\0\1\71\1\0"+
    "\2\71\1\0\3\71\1\0\46\71\1\u03c8\10\71\1\0"+
    "\1\71\1\0\2\71\1\0\3\71\1\0\35\71\1\u03c9"+
    "\21\71\1\0\1\71\1\0\2\71\1\0\3\71\1\0"+
    "\45\71\1\u03ca\11\71\1\0\1\71\1\0\2\71\1\0"+
    "\3\71\1\0\33\71\1\u03cb\23\71\1\0\1\71\1\0"+
    "\2\71\1\0\3\71\1\0\33\71\1\u03cc\11\71\1\u03cd"+
    "\11\71\1\0\1\71\1\0\2\71\1\0\3\71\1\0"+
    "\43\71\1\u0196\13\71\1\0\1\71\1\0\2\71\1\0"+
    "\3\71\1\0\50\71\1\u03ce\6\71\1\0\1\71\1\0"+
    "\2\71\1\0\3\71\1\0\44\71\1\u03cf\12\71\1\0"+
    "\1\71\1\0\2\71\1\0\3\71\1\0\47\71\1\u0196"+
    "\7\71\1\0\1\71\1\0\2\71\1\0\3\71\1\0"+
    "\35\71\1\u02c3\17\71\57\0\1\u03d0\1\u03d1\53\0\1\u03d2"+
    "\70\0\1\u01af\77\0\1\u01af\57\0\1\u03d3\103\0\1\u03d4"+
    "\35\0\1\u03d5\1\u03d6\1\u03d7\2\0\1\u03d8\1\0\1\u01af"+
    "\12\0\1\u03d9\102\0\1\u03da\62\0\1\u03db\60\0\1\u03dc"+
    "\76\0\1\u03dd\105\0\1\u03de\57\0\1\u03df\100\0\1\u03e0"+
    "\56\0\1\u03e1\70\0\1\u03e2\11\0\1\u03e3\66\0\1\u01af"+
    "\75\0\1\u03e4\64\0\1\u03e5\73\0\1\u01af\56\0\1\u02d8"+
    "\54\0\22\153\1\u03e6\1\u03e7\6\153\37\0\6\153\1\u03e8"+
    "\23\153\37\0\6\153\1\u01c9\23\153\37\0\15\153\1\u01c9"+
    "\14\153\37\0\4\153\1\u03e9\25\153\37\0\17\153\1\u03ea"+
    "\12\153\23\0\1\u03d5\1\u03d6\1\u03d7\2\0\1\u03d8\1\0"+
    "\1\u01af\4\0\6\153\1\u03eb\23\153\37\0\20\153\1\u03ec"+
    "\11\153\37\0\12\153\1\u03ed\17\153\37\0\2\153\1\u03ee"+
    "\27\153\37\0\10\153\1\u03ef\21\153\37\0\25\153\1\u03f0"+
    "\4\153\37\0\14\153\1\u03f1\15\153\37\0\24\153\1\u03f2"+
    "\5\153\37\0\12\153\1\u03f3\17\153\37\0\12\153\1\u03f4"+
    "\11\153\1\u03f5\5\153\37\0\22\153\1\u01c9\7\153\37\0"+
    "\27\153\1\u03f6\2\153\37\0\23\153\1\u03f7\6\153\37\0"+
    "\26\153\1\u01c9\3\153\37\0\14\153\1\u02ee\15\153\2\0"+
    "\2\u01e2\1\223\1\u01e2\1\224\52\u01e2\1\u03f8\1\u03f9\12\u01e2"+
    "\1\223\1\u01e2\1\224\36\u01e2\1\u03fa\27\u01e2\1\223\1\u01e2"+
    "\1\224\36\u01e2\1\u01e8\27\u01e2\1\223\1\u01e2\1\224\45\u01e2"+
    "\1\u01e8\20\u01e2\1\223\1\u01e2\1\224\34\u01e2\1\u03fb\31\u01e2"+
    "\1\223\1\u01e2\1\224\47\u01e2\1\u03fc\16\u01e2\1\223\1\u01e2"+
    "\1\224\14\u01e2\1\u03fd\1\u03fe\1\u03ff\2\u01e2\1\u0400\1\u01e2"+
    "\1\u01e8\12\u01e2\1\u0401\27\u01e2\1\223\1\u01e2\1\224\50\u01e2"+
    "\1\u0402\15\u01e2\1\223\1\u01e2\1\224\42\u01e2\1\u0403\23\u01e2"+
    "\1\223\1\u01e2\1\224\32\u01e2\1\u0404\33\u01e2\1\223\1\u01e2"+
    "\1\224\40\u01e2\1\u0405\25\u01e2\1\223\1\u01e2\1\224\55\u01e2"+
    "\1\u0406\10\u01e2\1\223\1\u01e2\1\224\44\u01e2\1\u0407\21\u01e2"+
    "\1\223\1\u01e2\1\224\54\u01e2\1\u0408\11\u01e2\1\223\1\u01e2"+
    "\1\224\42\u01e2\1\u0409\23\u01e2\1\223\1\u01e2\1\224\42\u01e2"+
    "\1\u040a\11\u01e2\1\u040b\11\u01e2\1\223\1\u01e2\1\224\52\u01e2"+
    "\1\u01e8\13\u01e2\1\223\1\u01e2\1\224\57\u01e2\1\u040c\6\u01e2"+
    "\1\223\1\u01e2\1\224\53\u01e2\1\u040d\12\u01e2\1\223\1\u01e2"+
    "\1\224\56\u01e2\1\u01e8\7\u01e2\1\223\1\u01e2\1\224\44\u01e2"+
    "\1\u0303\17\u01e2\7\303\1\0\3\303\1\0\43\303\1\u040e"+
    "\1\u040f\17\303\1\0\3\303\1\0\27\303\1\u0410\34\303"+
    "\1\0\3\303\1\0\27\303\1\u0201\34\303\1\0\3\303"+
    "\1\0\36\303\1\u0201\25\303\1\0\3\303\1\0\25\303"+
    "\1\u0411\36\303\1\0\3\303\1\0\40\303\1\u0412\23\303"+
    "\1\0\3\303\1\0\5\303\1\u0413\1\u0414\1\u0415\2\303"+
    "\1\u0416\1\303\1\u0201\12\303\1\u0417\34\303\1\0\3\303"+
    "\1\0\41\303\1\u0418\22\303\1\0\3\303\1\0\33\303"+
    "\1\u0419\30\303\1\0\3\303\1\0\23\303\1\u041a\40\303"+
    "\1\0\3\303\1\0\31\303\1\u041b\32\303\1\0\3\303"+
    "\1\0\46\303\1\u041c\15\303\1\0\3\303\1\0\35\303"+
    "\1\u041d\26\303\1\0\3\303\1\0\45\303\1\u041e\16\303"+
    "\1\0\3\303\1\0\33\303\1\u041f\30\303\1\0\3\303"+
    "\1\0\33\303\1\u0420\11\303\1\u0421\16\303\1\0\3\303"+
    "\1\0\43\303\1\u0201\20\303\1\0\3\303\1\0\50\303"+
    "\1\u0422\13\303\1\0\3\303\1\0\44\303\1\u0423\17\303"+
    "\1\0\3\303\1\0\47\303\1\u0201\14\303\1\0\3\303"+
    "\1\0\35\303\1\u0318\17\303\1\336\7\0\1\336\7\0"+
    "\11\336\4\0\22\336\1\u0424\1\u0425\6\336\2\0\1\336"+
    "\7\0\1\336\7\0\11\336\4\0\6\336\1\u0426\23\336"+
    "\2\0\1\336\7\0\1\336\7\0\11\336\4\0\6\336"+
    "\1\u021c\23\336\2\0\1\336\7\0\1\336\7\0\11\336"+
    "\4\0\15\336\1\u021c\14\336\2\0\1\336\7\0\1\336"+
    "\7\0\11\336\4\0\4\336\1\u0427\25\336\2\0\1\336"+
    "\7\0\1\336\7\0\11\336\4\0\17\336\1\u0428\12\336"+
    "\2\0\1\336\7\0\1\336\7\0\1\336\1\u0429\1\u042a"+
    "\1\u042b\2\336\1\u042c\1\336\1\u021c\4\0\6\336\1\u042d"+
    "\23\336\2\0\1\336\7\0\1\336\7\0\11\336\4\0"+
    "\20\336\1\u042e\11\336\2\0\1\336\7\0\1\336\7\0"+
    "\11\336\4\0\12\336\1\u042f\17\336\2\0\1\336\7\0"+
    "\1\336\7\0\11\336\4\0\2\336\1\u0430\27\336\2\0"+
    "\1\336\7\0\1\336\7\0\11\336\4\0\10\336\1\u0431"+
    "\21\336\2\0\1\336\7\0\1\336\7\0\11\336\4\0"+
    "\25\336\1\u0432\4\336\2\0\1\336\7\0\1\336\7\0"+
    "\11\336\4\0\14\336\1\u0433\15\336\2\0\1\336\7\0"+
    "\1\336\7\0\11\336\4\0\24\336\1\u0434\5\336\2\0"+
    "\1\336\7\0\1\336\7\0\11\336\4\0\12\336\1\u0435"+
    "\17\336\2\0\1\336\7\0\1\336\7\0\11\336\4\0"+
    "\12\336\1\u0436\11\336\1\u0437\5\336\2\0\1\336\7\0"+
    "\1\336\7\0\11\336\4\0\22\336\1\u021c\7\336\2\0"+
    "\1\336\7\0\1\336\7\0\11\336\4\0\27\336\1\u0438"+
    "\2\336\2\0\1\336\7\0\1\336\7\0\11\336\4\0"+
    "\23\336\1\u0439\6\336\2\0\1\336\7\0\1\336\7\0"+
    "\11\336\4\0\26\336\1\u021c\3\336\2\0\1\336\7\0"+
    "\1\336\7\0\11\336\4\0\14\336\1\u032e\15\336\37\0"+
    "\22\u0100\1\u043a\1\u043b\6\u0100\37\0\6\u0100\1\u043c\23\u0100"+
    "\37\0\6\u0100\1\u0238\23\u0100\37\0\15\u0100\1\u0238\14\u0100"+
    "\37\0\4\u0100\1\u043d\25\u0100\37\0\17\u0100\1\u043e\12\u0100"+
    "\23\0\1\u03d5\1\u03d6\1\u03d7\2\0\1\u03d8\1\0\1\u01af"+
    "\4\0\6\u0100\1\u043f\23\u0100\37\0\20\u0100\1\u0440\11\u0100"+
    "\37\0\12\u0100\1\u0441\17\u0100\37\0\2\u0100\1\u0442\27\u0100"+
    "\37\0\10\u0100\1\u0443\21\u0100\37\0\25\u0100\1\u0444\4\u0100"+
    "\37\0\14\u0100\1\u0445\15\u0100\37\0\24\u0100\1\u0446\5\u0100"+
    "\37\0\12\u0100\1\u0447\17\u0100\37\0\12\u0100\1\u0448\11\u0100"+
    "\1\u0449\5\u0100\37\0\22\u0100\1\u0238\7\u0100\37\0\27\u0100"+
    "\1\u044a\2\u0100\37\0\23\u0100\1\u044b\6\u0100\37\0\26\u0100"+
    "\1\u0238\3\u0100\37\0\14\u0100\1\u0344\15\u0100\37\0\22\u0131"+
    "\1\u044c\1\u044d\6\u0131\37\0\6\u0131\1\u044e\23\u0131\37\0"+
    "\6\u0131\1\u0251\23\u0131\37\0\15\u0131\1\u0251\14\u0131\37\0"+
    "\4\u0131\1\u044f\25\u0131\37\0\17\u0131\1\u0450\12\u0131\23\0"+
    "\1\u03d5\1\u03d6\1\u03d7\2\0\1\u03d8\1\0\1\u01af\4\0"+
    "\6\u0131\1\u0451\23\u0131\37\0\20\u0131\1\u0452\11\u0131\37\0"+
    "\12\u0131\1\u0453\17\u0131\37\0\2\u0131\1\u0454\27\u0131\37\0"+
    "\10\u0131\1\u0455\21\u0131\37\0\25\u0131\1\u0456\4\u0131\37\0"+
    "\14\u0131\1\u0457\15\u0131\37\0\24\u0131\1\u0458\5\u0131\37\0"+
    "\12\u0131\1\u0459\17\u0131\37\0\12\u0131\1\u045a\11\u0131\1\u045b"+
    "\5\u0131\37\0\22\u0131\1\u0251\7\u0131\37\0\27\u0131\1\u045c"+
    "\2\u0131\37\0\23\u0131\1\u045d\6\u0131\37\0\26\u0131\1\u0251"+
    "\3\u0131\37\0\14\u0131\1\u0359\15\u0131\2\0\1\u0141\7\0"+
    "\1\u0141\7\0\11\u0141\4\0\22\u0141\1\u045e\1\u045f\6\u0141"+
    "\2\0\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0\6\u0141"+
    "\1\u0460\23\u0141\2\0\1\u0141\7\0\1\u0141\7\0\11\u0141"+
    "\4\0\6\u0141\1\u026a\23\u0141\2\0\1\u0141\7\0\1\u0141"+
    "\7\0\11\u0141\4\0\15\u0141\1\u026a\14\u0141\2\0\1\u0141"+
    "\7\0\1\u0141\7\0\11\u0141\4\0\4\u0141\1\u0461\25\u0141"+
    "\2\0\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0\17\u0141"+
    "\1\u0462\12\u0141\2\0\1\u0141\7\0\1\u0141\7\0\1\u0141"+
    "\1\u0463\1\u0464\1\u0465\2\u0141\1\u0466\1\u0141\1\u026a\4\0"+
    "\6\u0141\1\u0467\23\u0141\2\0\1\u0141\7\0\1\u0141\7\0"+
    "\11\u0141\4\0\20\u0141\1\u0468\11\u0141\2\0\1\u0141\7\0"+
    "\1\u0141\7\0\11\u0141\4\0\12\u0141\1\u0469\17\u0141\2\0"+
    "\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0\2\u0141\1\u046a"+
    "\27\u0141\2\0\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0"+
    "\10\u0141\1\u046b\21\u0141\2\0\1\u0141\7\0\1\u0141\7\0"+
    "\11\u0141\4\0\25\u0141\1\u046c\4\u0141\2\0\1\u0141\7\0"+
    "\1\u0141\7\0\11\u0141\4\0\14\u0141\1\u046d\15\u0141\2\0"+
    "\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0\24\u0141\1\u046e"+
    "\5\u0141\2\0\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0"+
    "\12\u0141\1\u046f\17\u0141\2\0\1\u0141\7\0\1\u0141\7\0"+
    "\11\u0141\4\0\12\u0141\1\u0470\11\u0141\1\u0471\5\u0141\2\0"+
    "\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0\22\u0141\1\u026a"+
    "\7\u0141\2\0\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0"+
    "\27\u0141\1\u0472\2\u0141\2\0\1\u0141\7\0\1\u0141\7\0"+
    "\11\u0141\4\0\23\u0141\1\u0473\6\u0141\2\0\1\u0141\7\0"+
    "\1\u0141\7\0\11\u0141\4\0\26\u0141\1\u026a\3\u0141\2\0"+
    "\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0\14\u0141\1\u036e"+
    "\15\u0141\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0"+
    "\22\u0151\1\u0474\1\u0475\6\u0151\2\0\1\u0151\7\0\1\u0151"+
    "\7\0\11\u0151\4\0\6\u0151\1\u0476\23\u0151\2\0\1\u0151"+
    "\7\0\1\u0151\7\0\11\u0151\4\0\6\u0151\1\u0283\23\u0151"+
    "\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0\15\u0151"+
    "\1\u0283\14\u0151\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151"+
    "\4\0\4\u0151\1\u0477\25\u0151\2\0\1\u0151\7\0\1\u0151"+
    "\7\0\11\u0151\4\0\17\u0151\1\u0478\12\u0151\2\0\1\u0151"+
    "\7\0\1\u0151\7\0\1\u0151\1\u0479\1\u047a\1\u047b\2\u0151"+
    "\1\u047c\1\u0151\1\u0283\4\0\6\u0151\1\u047d\23\u0151\2\0"+
    "\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0\20\u0151\1\u047e"+
    "\11\u0151\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0"+
    "\12\u0151\1\u047f\17\u0151\2\0\1\u0151\7\0\1\u0151\7\0"+
    "\11\u0151\4\0\2\u0151\1\u0480\27\u0151\2\0\1\u0151\7\0"+
    "\1\u0151\7\0\11\u0151\4\0\10\u0151\1\u0481\21\u0151\2\0"+
    "\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0\25\u0151\1\u0482"+
    "\4\u0151\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0"+
    "\14\u0151\1\u0483\15\u0151\2\0\1\u0151\7\0\1\u0151\7\0"+
    "\11\u0151\4\0\24\u0151\1\u0484\5\u0151\2\0\1\u0151\7\0"+
    "\1\u0151\7\0\11\u0151\4\0\12\u0151\1\u0485\17\u0151\2\0"+
    "\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0\12\u0151\1\u0486"+
    "\11\u0151\1\u0487\5\u0151\2\0\1\u0151\7\0\1\u0151\7\0"+
    "\11\u0151\4\0\22\u0151\1\u0283\7\u0151\2\0\1\u0151\7\0"+
    "\1\u0151\7\0\11\u0151\4\0\27\u0151\1\u0488\2\u0151\2\0"+
    "\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0\23\u0151\1\u0489"+
    "\6\u0151\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0"+
    "\26\u0151\1\u0283\3\u0151\2\0\1\u0151\7\0\1\u0151\7\0"+
    "\11\u0151\4\0\14\u0151\1\u0383\15\u0151\2\0\1\33\7\0"+
    "\1\33\7\0\11\33\4\0\6\33\1\u048a\23\33\2\0"+
    "\1\33\7\0\1\33\7\0\11\33\4\0\16\33\1\u048b"+
    "\13\33\2\0\1\33\7\0\1\33\7\0\11\33\4\0"+
    "\13\33\1\u016c\16\33\2\0\1\33\7\0\1\33\7\0"+
    "\11\33\4\0\22\33\1\u048c\7\33\2\0\1\33\7\0"+
    "\1\33\7\0\11\33\4\0\4\33\1\u048d\25\33\2\0"+
    "\1\33\7\0\1\33\7\0\11\33\4\0\23\33\1\u048e"+
    "\6\33\2\0\1\33\7\0\1\33\7\0\11\33\4\0"+
    "\12\33\1\u048f\6\33\1\u0490\10\33\2\0\1\33\7\0"+
    "\1\33\7\0\11\33\4\0\10\33\1\u0491\12\33\1\u02a3"+
    "\6\33\2\0\1\33\7\0\1\33\7\0\11\33\4\0"+
    "\21\33\1\u02bf\10\33\2\0\1\33\7\0\1\33\7\0"+
    "\11\33\4\0\6\33\1\u0492\23\33\2\0\1\33\7\0"+
    "\1\33\7\0\11\33\4\0\23\33\1\u0493\6\33\2\0"+
    "\1\33\7\0\1\33\7\0\11\33\4\0\21\33\1\u0494"+
    "\10\33\2\0\1\33\7\0\1\33\7\0\2\33\1\u0495"+
    "\3\33\1\u016c\2\33\4\0\32\33\2\0\1\33\7\0"+
    "\1\33\7\0\5\33\1\u0496\3\33\4\0\32\33\2\0"+
    "\1\33\7\0\1\33\7\0\2\33\1\u016c\6\33\4\0"+
    "\32\33\2\0\1\33\7\0\1\33\7\0\4\33\1\u016c"+
    "\4\33\4\0\32\33\2\0\1\33\7\0\1\33\7\0"+
    "\11\33\4\0\21\33\1\u0497\10\33\2\0\1\33\7\0"+
    "\1\33\7\0\11\33\4\0\12\33\1\u03b4\17\33\2\0"+
    "\1\33\7\0\1\33\7\0\11\33\4\0\23\33\1\u0498"+
    "\6\33\2\0\1\33\7\0\1\33\7\0\11\33\4\0"+
    "\7\33\1\u0499\22\33\2\0\1\33\7\0\1\33\7\0"+
    "\11\33\4\0\3\33\1\u02c0\26\33\2\0\1\33\7\0"+
    "\1\33\7\0\11\33\4\0\15\33\1\u049a\14\33\2\0"+
    "\1\33\7\0\1\33\7\0\11\33\4\0\2\33\1\u049b"+
    "\27\33\2\0\1\33\7\0\1\33\7\0\11\33\4\0"+
    "\12\33\1\u049c\17\33\2\0\1\33\7\0\1\33\7\0"+
    "\11\33\4\0\21\33\1\u049d\10\33\2\0\1\33\7\0"+
    "\1\33\7\0\11\33\4\0\16\33\1\u049e\13\33\2\0"+
    "\1\33\7\0\1\33\7\0\11\33\4\0\5\33\1\u049f"+
    "\24\33\2\0\1\33\7\0\1\33\7\0\11\33\4\0"+
    "\16\33\1\u04a0\13\33\2\0\1\33\7\0\1\33\7\0"+
    "\11\33\4\0\4\33\1\u0494\25\33\2\0\1\33\7\0"+
    "\1\33\7\0\11\33\4\0\17\33\1\u02bf\12\33\2\0"+
    "\1\33\7\0\1\33\7\0\11\33\4\0\22\33\1\u04a1"+
    "\7\33\2\0\1\33\7\0\1\33\7\0\11\33\4\0"+
    "\6\33\1\u04a2\23\33\2\0\1\33\7\0\1\33\7\0"+
    "\1\33\1\u03a4\1\u03a5\1\u03a6\2\33\1\u03a7\1\33\1\u016c"+
    "\4\0\32\33\2\0\2\71\1\0\1\71\1\0\2\71"+
    "\1\0\3\71\1\0\44\71\1\u04a3\12\71\1\0\1\71"+
    "\1\0\2\71\1\0\3\71\1\0\33\71\1\u04a4\6\71"+
    "\1\u04a5\14\71\1\0\1\71\1\0\2\71\1\0\3\71"+
    "\1\0\44\71\1\u02c3\12\71\1\0\1\71\1\0\2\71"+
    "\1\0\3\71\1\0\44\71\1\u04a6\12\71\1\0\1\71"+
    "\1\0\2\71\1\0\3\71\1\0\42\71\1\u04a7\14\71"+
    "\1\0\1\71\1\0\2\71\1\0\3\71\1\0\6\71"+
    "\1\u04a8\3\71\1\u0196\44\71\1\0\1\71\1\0\2\71"+
    "\1\0\3\71\1\0\11\71\1\u04a9\45\71\1\0\1\71"+
    "\1\0\2\71\1\0\3\71\1\0\6\71\1\u0196\50\71"+
    "\1\0\1\71\1\0\2\71\1\0\3\71\1\0\10\71"+
    "\1\u0196\46\71\1\0\1\71\1\0\2\71\1\0\3\71"+
    "\1\0\42\71\1\u04aa\14\71\1\0\1\71\1\0\2\71"+
    "\1\0\3\71\1\0\33\71\1\u03cc\23\71\1\0\1\71"+
    "\1\0\2\71\1\0\3\71\1\0\30\71\1\u04ab\26\71"+
    "\1\0\1\71\1\0\2\71\1\0\3\71\1\0\24\71"+
    "\1\u02d5\32\71\1\0\1\71\1\0\2\71\1\0\3\71"+
    "\1\0\36\71\1\u04ac\20\71\1\0\1\71\1\0\2\71"+
    "\1\0\3\71\1\0\23\71\1\u03bc\33\71\1\0\1\71"+
    "\1\0\2\71\1\0\3\71\1\0\33\71\1\u04ad\23\71"+
    "\1\0\1\71\1\0\2\71\1\0\3\71\1\0\42\71"+
    "\1\u04ae\14\71\1\0\1\71\1\0\2\71\1\0\3\71"+
    "\1\0\26\71\1\u04af\30\71\1\0\1\71\1\0\2\71"+
    "\1\0\3\71\1\0\37\71\1\u04b0\17\71\1\0\1\71"+
    "\1\0\2\71\1\0\3\71\1\0\25\71\1\u04a7\31\71"+
    "\1\0\1\71\1\0\2\71\1\0\3\71\1\0\27\71"+
    "\1\u04b1\27\71\1\0\1\71\1\0\2\71\1\0\3\71"+
    "\1\0\5\71\1\u03bf\1\u03c0\1\u03c1\2\71\1\u03c2\1\71"+
    "\1\u0196\40\71\60\0\1\u04b2\57\0\1\u04b3\6\0\1\u04b4"+
    "\72\0\1\u02d8\70\0\1\u04b5\66\0\1\u04b6\34\0\1\u04b7"+
    "\3\0\1\u01af\67\0\1\u04b8\65\0\1\u01af\72\0\1\u01af"+
    "\122\0\1\u04b9\61\0\1\u03e2\65\0\1\u04ba\64\0\1\u02ea"+
    "\102\0\1\u04bb\55\0\1\u03d2\100\0\1\u04bc\77\0\1\u04bd"+
    "\54\0\1\u04be\101\0\1\u04bf\56\0\1\u04b6\72\0\1\u04c0"+
    "\46\0\1\u03d5\1\u03d6\1\u03d7\2\0\1\u03d8\1\0\1\u01af"+
    "\75\0\23\153\1\u04c1\6\153\37\0\12\153\1\u04c2\6\153"+
    "\1\u04c3\10\153\37\0\23\153\1\u02ee\6\153\37\0\23\153"+
    "\1\u04c4\6\153\37\0\21\153\1\u04c5\10\153\37\0\21\153"+
    "\1\u04c6\10\153\37\0\12\153\1\u03f4\17\153\37\0\7\153"+
    "\1\u04c7\22\153\37\0\3\153\1\u0300\26\153\37\0\15\153"+
    "\1\u04c8\14\153\37\0\2\153\1\u03e8\27\153\37\0\12\153"+
    "\1\u04c9\17\153\37\0\21\153\1\u04ca\10\153\37\0\5\153"+
    "\1\u04cb\24\153\37\0\16\153\1\u04cc\13\153\37\0\4\153"+
    "\1\u04c5\25\153\37\0\6\153\1\u04cd\23\153\23\0\1\u03d5"+
    "\1\u03d6\1\u03d7\2\0\1\u03d8\1\0\1\u01af\4\0\32\153"+
    "\2\0\2\u01e2\1\223\1\u01e2\1\224\53\u01e2\1\u04ce\12\u01e2"+
    "\1\223\1\u01e2\1\224\42\u01e2\1\u04cf\6\u01e2\1\u04d0\14\u01e2"+
    "\1\223\1\u01e2\1\224\53\u01e2\1\u0303\12\u01e2\1\223\1\u01e2"+
    "\1\224\53\u01e2\1\u04d1\12\u01e2\1\223\1\u01e2\1\224\51\u01e2"+
    "\1\u04d2\14\u01e2\1\223\1\u01e2\1\224\15\u01e2\1\u04d3\3\u01e2"+
    "\1\u01e8\44\u01e2\1\223\1\u01e2\1\224\20\u01e2\1\u04d4\45\u01e2"+
    "\1\223\1\u01e2\1\224\15\u01e2\1\u01e8\50\u01e2\1\223\1\u01e2"+
    "\1\224\17\u01e2\1\u01e8\46\u01e2\1\223\1\u01e2\1\224\51\u01e2"+
    "\1\u04d5\14\u01e2\1\223\1\u01e2\1\224\42\u01e2\1\u040a\23\u01e2"+
    "\1\223\1\u01e2\1\224\37\u01e2\1\u04d6\26\u01e2\1\223\1\u01e2"+
    "\1\224\33\u01e2\1\u0315\32\u01e2\1\223\1\u01e2\1\224\45\u01e2"+
    "\1\u04d7\20\u01e2\1\223\1\u01e2\1\224\32\u01e2\1\u03fa\33\u01e2"+
    "\1\223\1\u01e2\1\224\42\u01e2\1\u04d8\23\u01e2\1\223\1\u01e2"+
    "\1\224\51\u01e2\1\u04d9\14\u01e2\1\223\1\u01e2\1\224\35\u01e2"+
    "\1\u04da\30\u01e2\1\223\1\u01e2\1\224\46\u01e2\1\u04db\17\u01e2"+
    "\1\223\1\u01e2\1\224\34\u01e2\1\u04d2\31\u01e2\1\223\1\u01e2"+
    "\1\224\36\u01e2\1\u04dc\27\u01e2\1\223\1\u01e2\1\224\14\u01e2"+
    "\1\u03fd\1\u03fe\1\u03ff\2\u01e2\1\u0400\1\u01e2\1\u01e8\40\u01e2"+
    "\7\303\1\0\3\303\1\0\44\303\1\u04dd\17\303\1\0"+
    "\3\303\1\0\33\303\1\u04de\6\303\1\u04df\21\303\1\0"+
    "\3\303\1\0\44\303\1\u0318\17\303\1\0\3\303\1\0"+
    "\44\303\1\u04e0\17\303\1\0\3\303\1\0\42\303\1\u04e1"+
    "\21\303\1\0\3\303\1\0\6\303\1\u04e2\3\303\1\u0201"+
    "\51\303\1\0\3\303\1\0\11\303\1\u04e3\52\303\1\0"+
    "\3\303\1\0\6\303\1\u0201\55\303\1\0\3\303\1\0"+
    "\10\303\1\u0201\53\303\1\0\3\303\1\0\42\303\1\u04e4"+
    "\21\303\1\0\3\303\1\0\33\303\1\u0420\30\303\1\0"+
    "\3\303\1\0\30\303\1\u04e5\33\303\1\0\3\303\1\0"+
    "\24\303\1\u032a\37\303\1\0\3\303\1\0\36\303\1\u04e6"+
    "\25\303\1\0\3\303\1\0\23\303\1\u0410\40\303\1\0"+
    "\3\303\1\0\33\303\1\u04e7\30\303\1\0\3\303\1\0"+
    "\42\303\1\u04e8\21\303\1\0\3\303\1\0\26\303\1\u04e9"+
    "\35\303\1\0\3\303\1\0\37\303\1\u04ea\24\303\1\0"+
    "\3\303\1\0\25\303\1\u04e1\36\303\1\0\3\303\1\0"+
    "\27\303\1\u04eb\34\303\1\0\3\303\1\0\5\303\1\u0413"+
    "\1\u0414\1\u0415\2\303\1\u0416\1\303\1\u0201\40\303\1\336"+
    "\7\0\1\336\7\0\11\336\4\0\23\336\1\u04ec\6\336"+
    "\2\0\1\336\7\0\1\336\7\0\11\336\4\0\12\336"+
    "\1\u04ed\6\336\1\u04ee\10\336\2\0\1\336\7\0\1\336"+
    "\7\0\11\336\4\0\23\336\1\u032e\6\336\2\0\1\336"+
    "\7\0\1\336\7\0\11\336\4\0\23\336\1\u04ef\6\336"+
    "\2\0\1\336\7\0\1\336\7\0\11\336\4\0\21\336"+
    "\1\u04f0\10\336\2\0\1\336\7\0\1\336\7\0\2\336"+
    "\1\u04f1\3\336\1\u021c\2\336\4\0\32\336\2\0\1\336"+
    "\7\0\1\336\7\0\5\336\1\u04f2\3\336\4\0\32\336"+
    "\2\0\1\336\7\0\1\336\7\0\2\336\1\u021c\6\336"+
    "\4\0\32\336\2\0\1\336\7\0\1\336\7\0\4\336"+
    "\1\u021c\4\336\4\0\32\336\2\0\1\336\7\0\1\336"+
    "\7\0\11\336\4\0\21\336\1\u04f3\10\336\2\0\1\336"+
    "\7\0\1\336\7\0\11\336\4\0\12\336\1\u0436\17\336"+
    "\2\0\1\336\7\0\1\336\7\0\11\336\4\0\7\336"+
    "\1\u04f4\22\336\2\0\1\336\7\0\1\336\7\0\11\336"+
    "\4\0\3\336\1\u0340\26\336\2\0\1\336\7\0\1\336"+
    "\7\0\11\336\4\0\15\336\1\u04f5\14\336\2\0\1\336"+
    "\7\0\1\336\7\0\11\336\4\0\2\336\1\u0426\27\336"+
    "\2\0\1\336\7\0\1\336\7\0\11\336\4\0\12\336"+
    "\1\u04f6\17\336\2\0\1\336\7\0\1\336\7\0\11\336"+
    "\4\0\21\336\1\u04f7\10\336\2\0\1\336\7\0\1\336"+
    "\7\0\11\336\4\0\5\336\1\u04f8\24\336\2\0\1\336"+
    "\7\0\1\336\7\0\11\336\4\0\16\336\1\u04f9\13\336"+
    "\2\0\1\336\7\0\1\336\7\0\11\336\4\0\4\336"+
    "\1\u04f0\25\336\2\0\1\336\7\0\1\336\7\0\11\336"+
    "\4\0\6\336\1\u04fa\23\336\2\0\1\336\7\0\1\336"+
    "\7\0\1\336\1\u0429\1\u042a\1\u042b\2\336\1\u042c\1\336"+
    "\1\u021c\4\0\32\336\37\0\23\u0100\1\u04fb\6\u0100\37\0"+
    "\12\u0100\1\u04fc\6\u0100\1\u04fd\10\u0100\37\0\23\u0100\1\u0344"+
    "\6\u0100\37\0\23\u0100\1\u04fe\6\u0100\37\0\21\u0100\1\u04ff"+
    "\10\u0100\37\0\21\u0100\1\u0500\10\u0100\37\0\12\u0100\1\u0448"+
    "\17\u0100\37\0\7\u0100\1\u0501\22\u0100\37\0\3\u0100\1\u0356"+
    "\26\u0100\37\0\15\u0100\1\u0502\14\u0100\37\0\2\u0100\1\u043c"+
    "\27\u0100\37\0\12\u0100\1\u0503\17\u0100\37\0\21\u0100\1\u0504"+
    "\10\u0100\37\0\5\u0100\1\u0505\24\u0100\37\0\16\u0100\1\u0506"+
    "\13\u0100\37\0\4\u0100\1\u04ff\25\u0100\37\0\6\u0100\1\u0507"+
    "\23\u0100\23\0\1\u03d5\1\u03d6\1\u03d7\2\0\1\u03d8\1\0"+
    "\1\u01af\4\0\32\u0100\37\0\23\u0131\1\u0508\6\u0131\37\0"+
    "\12\u0131\1\u0509\6\u0131\1\u050a\10\u0131\37\0\23\u0131\1\u0359"+
    "\6\u0131\37\0\23\u0131\1\u050b\6\u0131\37\0\21\u0131\1\u050c"+
    "\10\u0131\37\0\21\u0131\1\u050d\10\u0131\37\0\12\u0131\1\u045a"+
    "\17\u0131\37\0\7\u0131\1\u050e\22\u0131\37\0\3\u0131\1\u036b"+
    "\26\u0131\37\0\15\u0131\1\u050f\14\u0131\37\0\2\u0131\1\u044e"+
    "\27\u0131\37\0\12\u0131\1\u0510\17\u0131\37\0\21\u0131\1\u0511"+
    "\10\u0131\37\0\5\u0131\1\u0512\24\u0131\37\0\16\u0131\1\u0513"+
    "\13\u0131\37\0\4\u0131\1\u050c\25\u0131\37\0\6\u0131\1\u0514"+
    "\23\u0131\23\0\1\u03d5\1\u03d6\1\u03d7\2\0\1\u03d8\1\0"+
    "\1\u01af\4\0\32\u0131\2\0\1\u0141\7\0\1\u0141\7\0"+
    "\11\u0141\4\0\23\u0141\1\u0515\6\u0141\2\0\1\u0141\7\0"+
    "\1\u0141\7\0\11\u0141\4\0\12\u0141\1\u0516\6\u0141\1\u0517"+
    "\10\u0141\2\0\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0"+
    "\23\u0141\1\u036e\6\u0141\2\0\1\u0141\7\0\1\u0141\7\0"+
    "\11\u0141\4\0\23\u0141\1\u0518\6\u0141\2\0\1\u0141\7\0"+
    "\1\u0141\7\0\11\u0141\4\0\21\u0141\1\u0519\10\u0141\2\0"+
    "\1\u0141\7\0\1\u0141\7\0\2\u0141\1\u051a\3\u0141\1\u026a"+
    "\2\u0141\4\0\32\u0141\2\0\1\u0141\7\0\1\u0141\7\0"+
    "\5\u0141\1\u051b\3\u0141\4\0\32\u0141\2\0\1\u0141\7\0"+
    "\1\u0141\7\0\2\u0141\1\u026a\6\u0141\4\0\32\u0141\2\0"+
    "\1\u0141\7\0\1\u0141\7\0\4\u0141\1\u026a\4\u0141\4\0"+
    "\32\u0141\2\0\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0"+
    "\21\u0141\1\u051c\10\u0141\2\0\1\u0141\7\0\1\u0141\7\0"+
    "\11\u0141\4\0\12\u0141\1\u0470\17\u0141\2\0\1\u0141\7\0"+
    "\1\u0141\7\0\11\u0141\4\0\7\u0141\1\u051d\22\u0141\2\0"+
    "\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0\3\u0141\1\u0380"+
    "\26\u0141\2\0\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0"+
    "\15\u0141\1\u051e\14\u0141\2\0\1\u0141\7\0\1\u0141\7\0"+
    "\11\u0141\4\0\2\u0141\1\u0460\27\u0141\2\0\1\u0141\7\0"+
    "\1\u0141\7\0\11\u0141\4\0\12\u0141\1\u051f\17\u0141\2\0"+
    "\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0\21\u0141\1\u0520"+
    "\10\u0141\2\0\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0"+
    "\5\u0141\1\u0521\24\u0141\2\0\1\u0141\7\0\1\u0141\7\0"+
    "\11\u0141\4\0\16\u0141\1\u0522\13\u0141\2\0\1\u0141\7\0"+
    "\1\u0141\7\0\11\u0141\4\0\4\u0141\1\u0519\25\u0141\2\0"+
    "\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0\6\u0141\1\u0523"+
    "\23\u0141\2\0\1\u0141\7\0\1\u0141\7\0\1\u0141\1\u0463"+
    "\1\u0464\1\u0465\2\u0141\1\u0466\1\u0141\1\u026a\4\0\32\u0141"+
    "\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0\23\u0151"+
    "\1\u0524\6\u0151\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151"+
    "\4\0\12\u0151\1\u0525\6\u0151\1\u0526\10\u0151\2\0\1\u0151"+
    "\7\0\1\u0151\7\0\11\u0151\4\0\23\u0151\1\u0383\6\u0151"+
    "\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0\23\u0151"+
    "\1\u0527\6\u0151\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151"+
    "\4\0\21\u0151\1\u0528\10\u0151\2\0\1\u0151\7\0\1\u0151"+
    "\7\0\2\u0151\1\u0529\3\u0151\1\u0283\2\u0151\4\0\32\u0151"+
    "\2\0\1\u0151\7\0\1\u0151\7\0\5\u0151\1\u052a\3\u0151"+
    "\4\0\32\u0151\2\0\1\u0151\7\0\1\u0151\7\0\2\u0151"+
    "\1\u0283\6\u0151\4\0\32\u0151\2\0\1\u0151\7\0\1\u0151"+
    "\7\0\4\u0151\1\u0283\4\u0151\4\0\32\u0151\2\0\1\u0151"+
    "\7\0\1\u0151\7\0\11\u0151\4\0\21\u0151\1\u052b\10\u0151"+
    "\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0\12\u0151"+
    "\1\u0486\17\u0151\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151"+
    "\4\0\7\u0151\1\u052c\22\u0151\2\0\1\u0151\7\0\1\u0151"+
    "\7\0\11\u0151\4\0\3\u0151\1\u0395\26\u0151\2\0\1\u0151"+
    "\7\0\1\u0151\7\0\11\u0151\4\0\15\u0151\1\u052d\14\u0151"+
    "\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0\2\u0151"+
    "\1\u0476\27\u0151\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151"+
    "\4\0\12\u0151\1\u052e\17\u0151\2\0\1\u0151\7\0\1\u0151"+
    "\7\0\11\u0151\4\0\21\u0151\1\u052f\10\u0151\2\0\1\u0151"+
    "\7\0\1\u0151\7\0\11\u0151\4\0\5\u0151\1\u0530\24\u0151"+
    "\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0\16\u0151"+
    "\1\u0531\13\u0151\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151"+
    "\4\0\4\u0151\1\u0528\25\u0151\2\0\1\u0151\7\0\1\u0151"+
    "\7\0\11\u0151\4\0\6\u0151\1\u0532\23\u0151\2\0\1\u0151"+
    "\7\0\1\u0151\7\0\1\u0151\1\u0479\1\u047a\1\u047b\2\u0151"+
    "\1\u047c\1\u0151\1\u0283\4\0\32\u0151\2\0\1\33\7\0"+
    "\1\33\7\0\11\33\4\0\22\33\1\u02b9\7\33\2\0"+
    "\1\33\7\0\1\33\7\0\11\33\4\0\4\33\1\u0533"+
    "\25\33\2\0\1\33\7\0\1\33\7\0\1\33\2\u0534"+
    "\1\u0535\5\u016c\4\0\32\33\2\0\1\33\7\0\1\33"+
    "\7\0\11\33\4\0\17\33\1\u0536\12\33\2\0\1\33"+
    "\7\0\1\33\7\0\11\33\4\0\21\33\1\u0537\10\33"+
    "\2\0\1\33\7\0\1\33\7\0\11\33\4\0\16\33"+
    "\1\u0538\13\33\2\0\1\33\7\0\1\33\7\0\11\33"+
    "\4\0\2\33\1\u03b5\27\33\2\0\1\33\7\0\1\33"+
    "\7\0\11\33\4\0\2\33\1\u0539\27\33\2\0\1\33"+
    "\7\0\1\33\7\0\11\33\4\0\30\33\1\u02bf\1\33"+
    "\2\0\1\33\7\0\1\33\7\0\11\33\4\0\12\33"+
    "\1\u053a\17\33\2\0\1\33\7\0\1\33\7\0\11\33"+
    "\4\0\23\33\1\u016c\6\33\2\0\1\33\7\0\1\33"+
    "\7\0\10\33\1\u016c\4\0\32\33\2\0\1\33\7\0"+
    "\1\33\7\0\6\33\1\u016c\2\33\4\0\32\33\2\0"+
    "\1\33\7\0\1\33\7\0\11\33\4\0\16\33\1\u053b"+
    "\13\33\2\0\1\33\7\0\1\33\7\0\11\33\4\0"+
    "\6\33\1\u02a1\23\33\2\0\1\33\7\0\1\33\7\0"+
    "\11\33\4\0\12\33\1\u053c\17\33\2\0\1\33\7\0"+
    "\1\33\7\0\11\33\4\0\2\33\1\u016c\27\33\2\0"+
    "\1\33\7\0\1\33\7\0\11\33\4\0\23\33\1\u02a3"+
    "\6\33\2\0\1\33\7\0\1\33\7\0\11\33\4\0"+
    "\4\33\1\u016c\25\33\2\0\1\33\7\0\1\33\7\0"+
    "\11\33\4\0\16\33\1\u053d\13\33\2\0\1\33\7\0"+
    "\1\33\7\0\11\33\4\0\5\33\1\u02a1\24\33\2\0"+
    "\1\33\7\0\1\33\7\0\11\33\4\0\12\33\1\u053e"+
    "\17\33\2\0\1\33\7\0\1\33\7\0\11\33\4\0"+
    "\10\33\1\u016c\21\33\2\0\1\33\7\0\1\33\7\0"+
    "\11\33\4\0\7\33\1\u053f\22\33\2\0\1\33\7\0"+
    "\1\33\7\0\11\33\4\0\5\33\1\u016c\24\33\2\0"+
    "\2\71\1\0\1\71\1\0\2\71\1\0\3\71\1\0"+
    "\42\71\1\u0540\14\71\1\0\1\71\1\0\2\71\1\0"+
    "\3\71\1\0\37\71\1\u01a8\17\71\1\0\1\71\1\0"+
    "\2\71\1\0\3\71\1\0\23\71\1\u03cd\33\71\1\0"+
    "\1\71\1\0\2\71\1\0\3\71\1\0\33\71\1\u0541"+
    "\23\71\1\0\1\71\1\0\2\71\1\0\3\71\1\0"+
    "\44\71\1\u0196\12\71\1\0\1\71\1\0\2\71\1\0"+
    "\3\71\1\0\14\71\1\u0196\42\71\1\0\1\71\1\0"+
    "\2\71\1\0\3\71\1\0\12\71\1\u0196\44\71\1\0"+
    "\1\71\1\0\2\71\1\0\3\71\1\0\37\71\1\u0542"+
    "\17\71\1\0\1\71\1\0\2\71\1\0\3\71\1\0"+
    "\33\71\1\u0543\23\71\1\0\1\71\1\0\2\71\1\0"+
    "\3\71\1\0\23\71\1\u0196\33\71\1\0\1\71\1\0"+
    "\2\71\1\0\3\71\1\0\25\71\1\u0196\31\71\1\0"+
    "\1\71\1\0\2\71\1\0\3\71\1\0\37\71\1\u0544"+
    "\17\71\1\0\1\71\1\0\2\71\1\0\3\71\1\0"+
    "\33\71\1\u0545\23\71\1\0\1\71\1\0\2\71\1\0"+
    "\3\71\1\0\31\71\1\u0196\25\71\1\0\1\71\1\0"+
    "\2\71\1\0\3\71\1\0\26\71\1\u0196\26\71\56\0"+
    "\1\u0546\65\0\1\u01c1\54\0\1\u03e3\100\0\1\u0547\101\0"+
    "\1\u01af\40\0\1\u01af\66\0\1\u01af\115\0\1\u0548\64\0"+
    "\1\u0549\60\0\1\u01af\72\0\1\u01af\102\0\1\u054a\64\0"+
    "\1\u054b\66\0\1\u01af\65\0\1\u01af\63\0\21\153\1\u054c"+
    "\10\153\37\0\16\153\1\u01db\13\153\37\0\2\153\1\u03f5"+
    "\27\153\37\0\12\153\1\u054d\17\153\37\0\23\153\1\u01c9"+
    "\6\153\37\0\16\153\1\u054e\13\153\37\0\12\153\1\u054f"+
    "\17\153\37\0\2\153\1\u01c9\27\153\37\0\4\153\1\u01c9"+
    "\25\153\37\0\16\153\1\u0550\13\153\37\0\12\153\1\u0551"+
    "\17\153\37\0\10\153\1\u01c9\21\153\37\0\5\153\1\u01c9"+
    "\24\153\2\0\2\u01e2\1\223\1\u01e2\1\224\51\u01e2\1\u0552"+
    "\14\u01e2\1\223\1\u01e2\1\224\46\u01e2\1\u01fa\17\u01e2\1\223"+
    "\1\u01e2\1\224\32\u01e2\1\u040b\33\u01e2\1\223\1\u01e2\1\224"+
    "\42\u01e2\1\u0553\23\u01e2\1\223\1\u01e2\1\224\53\u01e2\1\u01e8"+
    "\12\u01e2\1\223\1\u01e2\1\224\23\u01e2\1\u01e8\42\u01e2\1\223"+
    "\1\u01e2\1\224\21\u01e2\1\u01e8\44\u01e2\1\223\1\u01e2\1\224"+
    "\46\u01e2\1\u0554\17\u01e2\1\223\1\u01e2\1\224\42\u01e2\1\u0555"+
    "\23\u01e2\1\223\1\u01e2\1\224\32\u01e2\1\u01e8\33\u01e2\1\223"+
    "\1\u01e2\1\224\34\u01e2\1\u01e8\31\u01e2\1\223\1\u01e2\1\224"+
    "\46\u01e2\1\u0556\17\u01e2\1\223\1\u01e2\1\224\42\u01e2\1\u0557"+
    "\23\u01e2\1\223\1\u01e2\1\224\40\u01e2\1\u01e8\25\u01e2\1\223"+
    "\1\u01e2\1\224\35\u01e2\1\u01e8\26\u01e2\7\303\1\0\3\303"+
    "\1\0\42\303\1\u0558\21\303\1\0\3\303\1\0\37\303"+
    "\1\u0213\24\303\1\0\3\303\1\0\23\303\1\u0421\40\303"+
    "\1\0\3\303\1\0\33\303\1\u0559\30\303\1\0\3\303"+
    "\1\0\44\303\1\u0201\17\303\1\0\3\303\1\0\14\303"+
    "\1\u0201\47\303\1\0\3\303\1\0\12\303\1\u0201\51\303"+
    "\1\0\3\303\1\0\37\303\1\u055a\24\303\1\0\3\303"+
    "\1\0\33\303\1\u055b\30\303\1\0\3\303\1\0\23\303"+
    "\1\u0201\40\303\1\0\3\303\1\0\25\303\1\u0201\36\303"+
    "\1\0\3\303\1\0\37\303\1\u055c\24\303\1\0\3\303"+
    "\1\0\33\303\1\u055d\30\303\1\0\3\303\1\0\31\303"+
    "\1\u0201\32\303\1\0\3\303\1\0\26\303\1\u0201\26\303"+
    "\1\336\7\0\1\336\7\0\11\336\4\0\21\336\1\u055e"+
    "\10\336\2\0\1\336\7\0\1\336\7\0\11\336\4\0"+
    "\16\336\1\u022e\13\336\2\0\1\336\7\0\1\336\7\0"+
    "\11\336\4\0\2\336\1\u0437\27\336\2\0\1\336\7\0"+
    "\1\336\7\0\11\336\4\0\12\336\1\u055f\17\336\2\0"+
    "\1\336\7\0\1\336\7\0\11\336\4\0\23\336\1\u021c"+
    "\6\336\2\0\1\336\7\0\1\336\7\0\10\336\1\u021c"+
    "\4\0\32\336\2\0\1\336\7\0\1\336\7\0\6\336"+
    "\1\u021c\2\336\4\0\32\336\2\0\1\336\7\0\1\336"+
    "\7\0\11\336\4\0\16\336\1\u0560\13\336\2\0\1\336"+
    "\7\0\1\336\7\0\11\336\4\0\12\336\1\u0561\17\336"+
    "\2\0\1\336\7\0\1\336\7\0\11\336\4\0\2\336"+
    "\1\u021c\27\336\2\0\1\336\7\0\1\336\7\0\11\336"+
    "\4\0\4\336\1\u021c\25\336\2\0\1\336\7\0\1\336"+
    "\7\0\11\336\4\0\16\336\1\u0562\13\336\2\0\1\336"+
    "\7\0\1\336\7\0\11\336\4\0\12\336\1\u0563\17\336"+
    "\2\0\1\336\7\0\1\336\7\0\11\336\4\0\10\336"+
    "\1\u021c\21\336\2\0\1\336\7\0\1\336\7\0\11\336"+
    "\4\0\5\336\1\u021c\24\336\37\0\21\u0100\1\u0564\10\u0100"+
    "\37\0\16\u0100\1\u024a\13\u0100\37\0\2\u0100\1\u0449\27\u0100"+
    "\37\0\12\u0100\1\u0565\17\u0100\37\0\23\u0100\1\u0238\6\u0100"+
    "\37\0\16\u0100\1\u0566\13\u0100\37\0\12\u0100\1\u0567\17\u0100"+
    "\37\0\2\u0100\1\u0238\27\u0100\37\0\4\u0100\1\u0238\25\u0100"+
    "\37\0\16\u0100\1\u0568\13\u0100\37\0\12\u0100\1\u0569\17\u0100"+
    "\37\0\10\u0100\1\u0238\21\u0100\37\0\5\u0100\1\u0238\24\u0100"+
    "\37\0\21\u0131\1\u056a\10\u0131\37\0\16\u0131\1\u0263\13\u0131"+
    "\37\0\2\u0131\1\u045b\27\u0131\37\0\12\u0131\1\u056b\17\u0131"+
    "\37\0\23\u0131\1\u0251\6\u0131\37\0\16\u0131\1\u056c\13\u0131"+
    "\37\0\12\u0131\1\u056d\17\u0131\37\0\2\u0131\1\u0251\27\u0131"+
    "\37\0\4\u0131\1\u0251\25\u0131\37\0\16\u0131\1\u056e\13\u0131"+
    "\37\0\12\u0131\1\u056f\17\u0131\37\0\10\u0131\1\u0251\21\u0131"+
    "\37\0\5\u0131\1\u0251\24\u0131\2\0\1\u0141\7\0\1\u0141"+
    "\7\0\11\u0141\4\0\21\u0141\1\u0570\10\u0141\2\0\1\u0141"+
    "\7\0\1\u0141\7\0\11\u0141\4\0\16\u0141\1\u027c\13\u0141"+
    "\2\0\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0\2\u0141"+
    "\1\u0471\27\u0141\2\0\1\u0141\7\0\1\u0141\7\0\11\u0141"+
    "\4\0\12\u0141\1\u0571\17\u0141\2\0\1\u0141\7\0\1\u0141"+
    "\7\0\11\u0141\4\0\23\u0141\1\u026a\6\u0141\2\0\1\u0141"+
    "\7\0\1\u0141\7\0\10\u0141\1\u026a\4\0\32\u0141\2\0"+
    "\1\u0141\7\0\1\u0141\7\0\6\u0141\1\u026a\2\u0141\4\0"+
    "\32\u0141\2\0\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0"+
    "\16\u0141\1\u0572\13\u0141\2\0\1\u0141\7\0\1\u0141\7\0"+
    "\11\u0141\4\0\12\u0141\1\u0573\17\u0141\2\0\1\u0141\7\0"+
    "\1\u0141\7\0\11\u0141\4\0\2\u0141\1\u026a\27\u0141\2\0"+
    "\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0\4\u0141\1\u026a"+
    "\25\u0141\2\0\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0"+
    "\16\u0141\1\u0574\13\u0141\2\0\1\u0141\7\0\1\u0141\7\0"+
    "\11\u0141\4\0\12\u0141\1\u0575\17\u0141\2\0\1\u0141\7\0"+
    "\1\u0141\7\0\11\u0141\4\0\10\u0141\1\u026a\21\u0141\2\0"+
    "\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0\5\u0141\1\u026a"+
    "\24\u0141\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0"+
    "\21\u0151\1\u0576\10\u0151\2\0\1\u0151\7\0\1\u0151\7\0"+
    "\11\u0151\4\0\16\u0151\1\u0295\13\u0151\2\0\1\u0151\7\0"+
    "\1\u0151\7\0\11\u0151\4\0\2\u0151\1\u0487\27\u0151\2\0"+
    "\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0\12\u0151\1\u0577"+
    "\17\u0151\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0"+
    "\23\u0151\1\u0283\6\u0151\2\0\1\u0151\7\0\1\u0151\7\0"+
    "\10\u0151\1\u0283\4\0\32\u0151\2\0\1\u0151\7\0\1\u0151"+
    "\7\0\6\u0151\1\u0283\2\u0151\4\0\32\u0151\2\0\1\u0151"+
    "\7\0\1\u0151\7\0\11\u0151\4\0\16\u0151\1\u0578\13\u0151"+
    "\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0\12\u0151"+
    "\1\u0579\17\u0151\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151"+
    "\4\0\2\u0151\1\u0283\27\u0151\2\0\1\u0151\7\0\1\u0151"+
    "\7\0\11\u0151\4\0\4\u0151\1\u0283\25\u0151\2\0\1\u0151"+
    "\7\0\1\u0151\7\0\11\u0151\4\0\16\u0151\1\u057a\13\u0151"+
    "\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0\12\u0151"+
    "\1\u057b\17\u0151\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151"+
    "\4\0\10\u0151\1\u0283\21\u0151\2\0\1\u0151\7\0\1\u0151"+
    "\7\0\11\u0151\4\0\5\u0151\1\u0283\24\u0151\2\0\1\33"+
    "\7\0\1\33\7\0\11\33\4\0\6\33\1\u03b2\23\33"+
    "\2\0\1\33\7\0\1\33\7\0\11\u016c\4\0\32\33"+
    "\2\0\1\33\7\0\1\33\7\0\3\u016c\6\33\4\0"+
    "\32\33\2\0\1\33\7\0\1\33\7\0\11\33\4\0"+
    "\5\33\1\u0533\24\33\2\0\1\33\7\0\1\33\7\0"+
    "\11\33\4\0\24\33\1\u057c\5\33\2\0\1\33\7\0"+
    "\1\33\7\0\11\33\4\0\24\33\1\u02a3\5\33\2\0"+
    "\1\33\7\0\1\33\7\0\11\33\4\0\23\33\1\u057d"+
    "\6\33\2\0\1\33\7\0\1\33\7\0\11\33\4\0"+
    "\17\33\1\u057e\12\33\2\0\1\33\7\0\1\33\7\0"+
    "\11\33\4\0\2\33\1\u029c\27\33\2\0\1\33\7\0"+
    "\1\33\7\0\11\33\4\0\6\33\1\u017a\23\33\2\0"+
    "\1\33\7\0\1\33\7\0\11\33\4\0\23\33\1\u057f"+
    "\6\33\2\0\1\33\7\0\1\33\7\0\11\33\4\0"+
    "\6\33\1\u0580\23\33\2\0\2\71\1\0\1\71\1\0"+
    "\2\71\1\0\3\71\1\0\45\71\1\u0581\11\71\1\0"+
    "\1\71\1\0\2\71\1\0\3\71\1\0\40\71\1\u0582"+
    "\16\71\1\0\1\71\1\0\2\71\1\0\3\71\1\0"+
    "\23\71\1\u0583\33\71\1\0\1\71\1\0\2\71\1\0"+
    "\3\71\1\0\27\71\1\u019a\27\71\1\0\1\71\1\0"+
    "\2\71\1\0\3\71\1\0\44\71\1\u0584\10\71\61\0"+
    "\1\u0585\63\0\1\u0586\53\0\1\u0587\74\0\1\u01b3\105\0"+
    "\1\u0588\45\0\24\153\1\u0589\5\153\37\0\17\153\1\u058a"+
    "\12\153\37\0\2\153\1\u058b\27\153\37\0\6\153\1\u01cd"+
    "\23\153\37\0\23\153\1\u058c\6\153\2\0\2\u01e2\1\223"+
    "\1\u01e2\1\224\54\u01e2\1\u058d\11\u01e2\1\223\1\u01e2\1\224"+
    "\47\u01e2\1\u058e\16\u01e2\1\223\1\u01e2\1\224\32\u01e2\1\u058f"+
    "\33\u01e2\1\223\1\u01e2\1\224\36\u01e2\1\u01ec\27\u01e2\1\223"+
    "\1\u01e2\1\224\53\u01e2\1\u0590\10\u01e2\7\303\1\0\3\303"+
    "\1\0\45\303\1\u0591\16\303\1\0\3\303\1\0\40\303"+
    "\1\u0592\23\303\1\0\3\303\1\0\23\303\1\u0593\40\303"+
    "\1\0\3\303\1\0\27\303\1\u0205\34\303\1\0\3\303"+
    "\1\0\44\303\1\u0594\10\303\1\336\7\0\1\336\7\0"+
    "\11\336\4\0\24\336\1\u0595\5\336\2\0\1\336\7\0"+
    "\1\336\7\0\11\336\4\0\17\336\1\u0596\12\336\2\0"+
    "\1\336\7\0\1\336\7\0\11\336\4\0\2\336\1\u0597"+
    "\27\336\2\0\1\336\7\0\1\336\7\0\11\336\4\0"+
    "\6\336\1\u0220\23\336\2\0\1\336\7\0\1\336\7\0"+
    "\11\336\4\0\23\336\1\u0598\6\336\37\0\24\u0100\1\u0599"+
    "\5\u0100\37\0\17\u0100\1\u059a\12\u0100\37\0\2\u0100\1\u059b"+
    "\27\u0100\37\0\6\u0100\1\u023c\23\u0100\37\0\23\u0100\1\u059c"+
    "\6\u0100\37\0\24\u0131\1\u059d\5\u0131\37\0\17\u0131\1\u059e"+
    "\12\u0131\37\0\2\u0131\1\u059f\27\u0131\37\0\6\u0131\1\u0255"+
    "\23\u0131\37\0\23\u0131\1\u05a0\6\u0131\2\0\1\u0141\7\0"+
    "\1\u0141\7\0\11\u0141\4\0\24\u0141\1\u05a1\5\u0141\2\0"+
    "\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0\17\u0141\1\u05a2"+
    "\12\u0141\2\0\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0"+
    "\2\u0141\1\u05a3\27\u0141\2\0\1\u0141\7\0\1\u0141\7\0"+
    "\11\u0141\4\0\6\u0141\1\u026e\23\u0141\2\0\1\u0141\7\0"+
    "\1\u0141\7\0\11\u0141\4\0\23\u0141\1\u05a4\6\u0141\2\0"+
    "\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0\24\u0151\1\u05a5"+
    "\5\u0151\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0"+
    "\17\u0151\1\u05a6\12\u0151\2\0\1\u0151\7\0\1\u0151\7\0"+
    "\11\u0151\4\0\2\u0151\1\u05a7\27\u0151\2\0\1\u0151\7\0"+
    "\1\u0151\7\0\11\u0151\4\0\6\u0151\1\u0287\23\u0151\2\0"+
    "\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0\23\u0151\1\u05a8"+
    "\6\u0151\2\0\1\33\7\0\1\33\7\0\11\33\4\0"+
    "\4\33\1\u05a9\25\33\2\0\1\33\7\0\1\33\7\0"+
    "\11\33\4\0\6\33\1\u05aa\23\33\2\0\1\33\7\0"+
    "\1\33\7\0\11\33\4\0\16\33\1\u016c\13\33\2\0"+
    "\1\33\7\0\1\33\7\0\11\33\4\0\30\33\1\u016c"+
    "\1\33\2\0\1\33\7\0\1\33\7\0\11\33\4\0"+
    "\21\33\1\u03b2\10\33\2\0\2\71\1\0\1\71\1\0"+
    "\2\71\1\0\3\71\1\0\25\71\1\u05ab\31\71\1\0"+
    "\1\71\1\0\2\71\1\0\3\71\1\0\37\71\1\u0196"+
    "\17\71\1\0\1\71\1\0\2\71\1\0\3\71\1\0"+
    "\35\71\1\u0196\21\71\1\0\1\71\1\0\2\71\1\0"+
    "\3\71\1\0\51\71\1\u0196\3\71\41\0\1\u05ac\102\0"+
    "\1\u01af\66\0\1\u01af\104\0\1\u01af\40\0\4\153\1\u05ad"+
    "\25\153\37\0\16\153\1\u01c9\13\153\37\0\14\153\1\u01c9"+
    "\15\153\37\0\30\153\1\u01c9\1\153\2\0\2\u01e2\1\223"+
    "\1\u01e2\1\224\34\u01e2\1\u05ae\31\u01e2\1\223\1\u01e2\1\224"+
    "\46\u01e2\1\u01e8\17\u01e2\1\223\1\u01e2\1\224\44\u01e2\1\u01e8"+
    "\21\u01e2\1\223\1\u01e2\1\224\60\u01e2\1\u01e8\3\u01e2\7\303"+
    "\1\0\3\303\1\0\25\303\1\u05af\36\303\1\0\3\303"+
    "\1\0\37\303\1\u0201\24\303\1\0\3\303\1\0\35\303"+
    "\1\u0201\26\303\1\0\3\303\1\0\51\303\1\u0201\3\303"+
    "\1\336\7\0\1\336\7\0\11\336\4\0\4\336\1\u05b0"+
    "\25\336\2\0\1\336\7\0\1\336\7\0\11\336\4\0"+
    "\16\336\1\u021c\13\336\2\0\1\336\7\0\1\336\7\0"+
    "\11\336\4\0\14\336\1\u021c\15\336\2\0\1\336\7\0"+
    "\1\336\7\0\11\336\4\0\30\336\1\u021c\1\336\37\0"+
    "\4\u0100\1\u05b1\25\u0100\37\0\16\u0100\1\u0238\13\u0100\37\0"+
    "\14\u0100\1\u0238\15\u0100\37\0\30\u0100\1\u0238\1\u0100\37\0"+
    "\4\u0131\1\u05b2\25\u0131\37\0\16\u0131\1\u0251\13\u0131\37\0"+
    "\14\u0131\1\u0251\15\u0131\37\0\30\u0131\1\u0251\1\u0131\2\0"+
    "\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0\4\u0141\1\u05b3"+
    "\25\u0141\2\0\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0"+
    "\16\u0141\1\u026a\13\u0141\2\0\1\u0141\7\0\1\u0141\7\0"+
    "\11\u0141\4\0\14\u0141\1\u026a\15\u0141\2\0\1\u0141\7\0"+
    "\1\u0141\7\0\11\u0141\4\0\30\u0141\1\u026a\1\u0141\2\0"+
    "\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0\4\u0151\1\u05b4"+
    "\25\u0151\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0"+
    "\16\u0151\1\u0283\13\u0151\2\0\1\u0151\7\0\1\u0151\7\0"+
    "\11\u0151\4\0\14\u0151\1\u0283\15\u0151\2\0\1\u0151\7\0"+
    "\1\u0151\7\0\11\u0151\4\0\30\u0151\1\u0283\1\u0151\2\0"+
    "\1\33\7\0\1\33\7\0\11\33\4\0\23\33\1\u05b5"+
    "\6\33\2\0\1\33\7\0\1\33\7\0\11\33\4\0"+
    "\4\33\1\u05b6\25\33\2\0\2\71\1\0\1\71\1\0"+
    "\2\71\1\0\3\71\1\0\44\71\1\u05b7\10\71\60\0"+
    "\1\u05b8\45\0\23\153\1\u05b9\6\153\2\0\2\u01e2\1\223"+
    "\1\u01e2\1\224\53\u01e2\1\u05ba\10\u01e2\7\303\1\0\3\303"+
    "\1\0\44\303\1\u05bb\10\303\1\336\7\0\1\336\7\0"+
    "\11\336\4\0\23\336\1\u05bc\6\336\37\0\23\u0100\1\u05bd"+
    "\6\u0100\37\0\23\u0131\1\u05be\6\u0131\2\0\1\u0141\7\0"+
    "\1\u0141\7\0\11\u0141\4\0\23\u0141\1\u05bf\6\u0141\2\0"+
    "\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0\23\u0151\1\u05c0"+
    "\6\u0151\2\0\1\33\7\0\1\33\7\0\11\33\4\0"+
    "\17\33\1\u017a\12\33\2\0\1\33\7\0\1\33\7\0"+
    "\11\33\4\0\2\33\1\u05c1\27\33\2\0\2\71\1\0"+
    "\1\71\1\0\2\71\1\0\3\71\1\0\40\71\1\u019a"+
    "\14\71\54\0\1\u01b3\51\0\17\153\1\u01cd\12\153\2\0"+
    "\2\u01e2\1\223\1\u01e2\1\224\47\u01e2\1\u01ec\14\u01e2\7\303"+
    "\1\0\3\303\1\0\40\303\1\u0205\14\303\1\336\7\0"+
    "\1\336\7\0\11\336\4\0\17\336\1\u0220\12\336\37\0"+
    "\17\u0100\1\u023c\12\u0100\37\0\17\u0131\1\u0255\12\u0131\2\0"+
    "\1\u0141\7\0\1\u0141\7\0\11\u0141\4\0\17\u0141\1\u026e"+
    "\12\u0141\2\0\1\u0151\7\0\1\u0151\7\0\11\u0151\4\0"+
    "\17\u0151\1\u0287\12\u0151\2\0\1\33\7\0\1\33\7\0"+
    "\11\33\4\0\14\33\1\u05c2\15\33\2\0\1\33\7\0"+
    "\1\33\7\0\11\33\4\0\14\33\1\u03b2\15\33\2\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[75639];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** Error code for "Unknown internal scanner error". */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  /** Error code for "could not match input". */
  private static final int ZZ_NO_MATCH = 1;
  /** Error code for "pushback value was too large". */
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /**
   * Error messages for {@link #ZZ_UNKNOWN_ERROR}, {@link #ZZ_NO_MATCH}, and
   * {@link #ZZ_PUSHBACK_2BIG} respectively.
   */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state {@code aState}
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\25\0\2\11\2\1\1\11\1\1\1\11\1\1\1\11"+
    "\33\1\1\11\1\1\2\11\15\1\2\11\1\1\2\11"+
    "\1\1\1\11\16\1\2\11\2\1\1\11\25\1\1\11"+
    "\23\1\1\11\1\1\2\11\1\1\1\11\17\1\2\11"+
    "\16\1\2\11\34\1\1\11\11\1\1\11\3\1\1\11"+
    "\26\1\1\11\10\1\1\11\33\1\2\11\17\1\1\11"+
    "\23\1\1\11\16\1\1\11\2\1\1\11\22\1\2\0"+
    "\1\1\2\11\103\1\1\0\1\1\1\11\2\0\1\1"+
    "\23\0\32\1\4\0\2\1\2\0\1\1\26\0\31\1"+
    "\1\11\1\0\31\1\2\11\1\0\240\1\6\0\1\1"+
    "\17\0\25\1\6\0\1\1\16\0\25\1\1\11\25\1"+
    "\1\11\137\1\2\11\55\1\25\0\23\1\25\0\245\1"+
    "\17\0\15\1\17\0\151\1\4\0\1\1\1\0\6\1"+
    "\4\0\1\1\1\0\55\1\4\0\4\1\4\0\33\1"+
    "\1\0\1\1\1\0\11\1\1\0\1\1\1\0\10\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[1474];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** Input device. */
  private java.io.Reader zzReader;

  /** Current state of the DFA. */
  private int zzState;

  /** Current lexical state. */
  private int zzLexicalState = YYINITIAL;

  /**
   * This buffer contains the current text to be matched and is the source of the {@link #yytext()}
   * string.
   */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** Text position at the last accepting state. */
  private int zzMarkedPos;

  /** Current text position in the buffer. */
  private int zzCurrentPos;

  /** Marks the beginning of the {@link #yytext()} string in the buffer. */
  private int zzStartRead;

  /** Marks the last character in the buffer, that has been read from input. */
  private int zzEndRead;

  /**
   * Whether the scanner is at the end of file.
   * @see #yyatEOF
   */
  private boolean zzAtEOF;

  /**
   * The number of occupied positions in {@link #zzBuffer} beyond {@link #zzEndRead}.
   *
   * <p>When a lead/high surrogate has been read from the input stream into the final
   * {@link #zzBuffer} position, this will have a value of 1; otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /** Number of newlines encountered up to the start of the matched text. */
  private int yyline;

  /** Number of characters from the last newline up to the start of the matched text. */
  private int yycolumn;

  /** Number of characters up to the start of the matched text. */
  @SuppressWarnings("unused")
  private long yychar;

  /** Whether the scanner is currently at the beginning of a line. */
  @SuppressWarnings("unused")
  private boolean zzAtBOL = true;

  /** Whether the user-EOF-code has already been executed. */
  @SuppressWarnings("unused")
  private boolean zzEOFDone;

  /* user code: */
    StringBuffer string = new StringBuffer();
    public static int flag = 0;
    public static int errorLine = -1;
    public static int errorColumn = -1;
    public static ArrayList<Token> tokens = new ArrayList<>();  
    public static ArrayList<Token> errores = new ArrayList<>();  


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexer(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Translates raw input code points to DFA table row
   */
  private static int zzCMap(int input) {
    int offset = input & 255;
    return offset == input ? ZZ_CMAP_BLOCKS[offset] : ZZ_CMAP_BLOCKS[ZZ_CMAP_TOP[input >> 8] | offset];
  }

  /**
   * Refills the input buffer.
   *
   * @return {@code false} iff there was new input.
   * @exception java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead - zzStartRead);

      /* translate stored positions */
      zzEndRead -= zzStartRead;
      zzCurrentPos -= zzStartRead;
      zzMarkedPos -= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length * 2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException(
          "Reader returned 0 characters. See JFlex examples/zero-reader for a workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
        if (numRead == requested) { // We requested too few chars to encode a full Unicode character
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        } else {                    // There is room in the buffer for at least one more char
          int c = zzReader.read();  // Expecting to read a paired low surrogate char
          if (c == -1) {
            return true;
          } else {
            zzBuffer[zzEndRead++] = (char)c;
          }
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }


  /**
   * Closes the input reader.
   *
   * @throws java.io.IOException if the reader could not be closed.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true; // indicate end of file
    zzEndRead = zzStartRead; // invalidate buffer

    if (zzReader != null) {
      zzReader.close();
    }
  }


  /**
   * Resets the scanner to read from a new input stream.
   *
   * <p>Does not close the old reader.
   *
   * <p>All internal variables are reset, the old input stream <b>cannot</b> be reused (internal
   * buffer is discarded and lost). Lexical state is set to {@code ZZ_INITIAL}.
   *
   * <p>Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader The new input stream.
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzEOFDone = false;
    yyResetPosition();
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE) {
      zzBuffer = new char[ZZ_BUFFERSIZE];
    }
  }

  /**
   * Resets the input position.
   */
  private final void yyResetPosition() {
      zzAtBOL  = true;
      zzAtEOF  = false;
      zzCurrentPos = 0;
      zzMarkedPos = 0;
      zzStartRead = 0;
      zzEndRead = 0;
      zzFinalHighSurrogate = 0;
      yyline = 0;
      yycolumn = 0;
      yychar = 0L;
  }


  /**
   * Returns whether the scanner has reached the end of the reader it reads from.
   *
   * @return whether the scanner has reached EOF.
   */
  public final boolean yyatEOF() {
    return zzAtEOF;
  }


  /**
   * Returns the current lexical state.
   *
   * @return the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state.
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   *
   * @return the matched text.
   */
  public final String yytext() {
    return new String(zzBuffer, zzStartRead, zzMarkedPos-zzStartRead);
  }


  /**
   * Returns the character at the given position from the matched text.
   *
   * <p>It is equivalent to {@code yytext().charAt(pos)}, but faster.
   *
   * @param position the position of the character to fetch. A value from 0 to {@code yylength()-1}.
   *
   * @return the character at {@code position}.
   */
  public final char yycharat(int position) {
    return zzBuffer[zzStartRead + position];
  }


  /**
   * How many characters were matched.
   *
   * @return the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occurred while scanning.
   *
   * <p>In a well-formed scanner (no or only correct usage of {@code yypushback(int)} and a
   * match-all fallback rule) this method will only be called with things that
   * "Can't Possibly Happen".
   *
   * <p>If this method is called, something is seriously wrong (e.g. a JFlex bug producing a faulty
   * scanner etc.).
   *
   * <p>Usual syntax/scanner level error handling should be done in error fallback rules.
   *
   * @param errorCode the code of the error message to display.
   */
  private static void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    } catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  }


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * <p>They will be read again by then next call of the scanning method.
   *
   * @param number the number of characters to be read again. This number must not be greater than
   *     {@link #yylength()}.
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }




  /**
   * Resumes scanning until the next regular expression is matched, the end of input is encountered
   * or an I/O-Error occurs.
   *
   * @return the next token.
   * @exception java.io.IOException if any I/O-Error occurs.
   */
  public int yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char[] zzBufferL = zzBuffer;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is
        // (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof)
            zzPeek = false;
          else
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;

      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {

          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMap(zzInput) ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
            switch (zzLexicalState) {
            case Comments: {
              errores.add(new Token("/**", yyline, yycolumn, "Error: llave comentario abierta"));
            }  // fall though
            case 1475: break;
            default:
          {   for(Token t: tokens){
    t.print();
  }

  System.out.println("\nErrores\n");
  for(Token t: errores){
    t.print();
  }
  return 0;
 }
        }
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1:
            { System.out.println(yyline);
                                  System.out.println(yycolumn);
                                  throw new Error("Illegal character <"+ yytext()+">");
            }
            // fall through
          case 61: break;
          case 2:
            { /* ignore */
            }
            // fall through
          case 62: break;
          case 3:
            { tokens.add(new Token(yytext(), yyline, yycolumn, "Operador"));
            }
            // fall through
          case 63: break;
          case 4:
            { string.setLength(0); yybegin(STRING);
            }
            // fall through
          case 64: break;
          case 5:
            { string.setLength(0); string.append(yytext()); yybegin(indetifierState);
            }
            // fall through
          case 65: break;
          case 6:
            { string.setLength(0); yybegin(Chars);
            }
            // fall through
          case 66: break;
          case 7:
            { string.setLength(0);string.append(yytext());yybegin(selectNumber);
            }
            // fall through
          case 67: break;
          case 8:
            { string.append( yytext() );
            }
            // fall through
          case 68: break;
          case 9:
            { errores.add(new Token("Salto linea", yyline, yycolumn, "Error: strings deben ir en la misma linea"));
                                    yybegin(stringError);
            }
            // fall through
          case 69: break;
          case 10:
            { yybegin(YYINITIAL);
                                   tokens.add(new Token(string.toString(), yyline, yycolumn, "Literal string"));
            }
            // fall through
          case 70: break;
          case 11:
            { errores.add(new Token("Comilla", yyline, yycolumn, "Error: cierre de comilla incorrecto"));
                                    yybegin(YYINITIAL);
            }
            // fall through
          case 71: break;
          case 12:
            { errores.add(new Token(yytext(), yyline, yycolumn, "Error: Numero no es hexadecimal"));
                                    yybegin(hexaStateError);
            }
            // fall through
          case 72: break;
          case 13:
            { errores.add(new Token(yytext(), yyline, yycolumn, "Error: hexadecimal sin cierre"));
                                    yybegin(YYINITIAL);
            }
            // fall through
          case 73: break;
          case 14:
            { yybegin(YYINITIAL);
                                    string.append( yytext() ); 
                                    tokens.add(new Token(string.toString(), yyline, yycolumn, "Literal hexadecimal/Palabra Reservada"));
            }
            // fall through
          case 74: break;
          case 15:
            { errores.add(new Token(yytext(), yyline, yycolumn, "Error: comillas de cierre incorrectas"));
                                    yybegin(YYINITIAL);
            }
            // fall through
          case 75: break;
          case 16:
            { tokens.add(new Token(yytext(), yyline, yycolumn, "Operador")); 
                                    errores.add(new Token("Comillas", yyline, yycolumn, "Error: hexadecimal sin cierre"));
                                    yybegin(YYINITIAL);
            }
            // fall through
          case 76: break;
          case 17:
            { string.append(yytext());
                                    yybegin(errorNumeros);///////////////
            }
            // fall through
          case 77: break;
          case 18:
            { yybegin(YYINITIAL);
                                    tokens.add(new Token(string.toString(), yyline, yycolumn, "Literal numerico"));
            }
            // fall through
          case 78: break;
          case 19:
            { tokens.add(new Token(string.toString(), yyline, yycolumn, "Literal numerico"));
                                    tokens.add(new Token(yytext(), yyline, yycolumn, "Operador"));
                                    yybegin(YYINITIAL);
            }
            // fall through
          case 79: break;
          case 20:
            { string.append(yytext());
            }
            // fall through
          case 80: break;
          case 21:
            { 
            }
            // fall through
          case 81: break;
          case 22:
            { yybegin(NaturalNumbers);
                                    string.append(yytext());
            }
            // fall through
          case 82: break;
          case 23:
            { string.append(yytext());
                                    yybegin(errorNumeros);
            }
            // fall through
          case 83: break;
          case 24:
            { errores.add(new Token("Salto linea", yyline, yycolumn, "Error: chars deben ir en la misma linea"));
                                    yybegin(charError);
            }
            // fall through
          case 84: break;
          case 25:
            { errores.add(new Token("Comilla", yyline, yycolumn, "Error: cierre de comilla incorrecto")); 
                                    yybegin(YYINITIAL);
            }
            // fall through
          case 85: break;
          case 26:
            { yybegin(YYINITIAL);
                                   tokens.add(new Token(string.toString(), yyline, yycolumn, "Literal char"));
            }
            // fall through
          case 86: break;
          case 27:
            { if(errorLine == -1){
                                                                    errorLine = yyline;
                                                                    errorColumn = yycolumn;
                                                                  }
            }
            // fall through
          case 87: break;
          case 28:
            { yybegin(YYINITIAL);
            }
            // fall through
          case 88: break;
          case 29:
            { errores.add(new Token(string.toString(), yyline, yycolumn, "Error: numero mal formado")); 
                                    yybegin(YYINITIAL);
            }
            // fall through
          case 89: break;
          case 30:
            { errores.add(new Token(yytext(), yyline, yycolumn, "Error: Numero no es hexadecimal"));
                                    yybegin(YYINITIAL);
            }
            // fall through
          case 90: break;
          case 31:
            { tokens.add(new Token(string.toString(), yyline, yycolumn, "identificador 1.1"));
                   yybegin(YYINITIAL);
            }
            // fall through
          case 91: break;
          case 32:
            { string.append(yytext()); yybegin(indetifierError);
            }
            // fall through
          case 92: break;
          case 33:
            { yybegin(plusSimbolT);
            }
            // fall through
          case 93: break;
          case 34:
            { yybegin(plusSimbolT1);
            }
            // fall through
          case 94: break;
          case 35:
            { errores.add(new Token(string.toString(), yyline, yycolumn, "Error de identificador2.1"));
                   yybegin(YYINITIAL);
            }
            // fall through
          case 95: break;
          case 36:
            { errores.add(new Token(string.toString(), yyline, yycolumn, "Error Decimal"));
                     string.setLength(0); 
                     yybegin(YYINITIAL);
            }
            // fall through
          case 96: break;
          case 37:
            { string.append(yytext());yybegin(selectExtra);
            }
            // fall through
          case 97: break;
          case 38:
            { yybegin(numberState);
            }
            // fall through
          case 98: break;
          case 39:
            { string.append(yytext());yybegin(numberState);
            }
            // fall through
          case 99: break;
          case 40:
            { string.append(yytext());yybegin(indetifierError);
            }
            // fall through
          case 100: break;
          case 41:
            { tokens.add(new Token(string.toString(), yyline, yycolumn, "identificador1.2.pp"));
                  tokens.add(new Token(";", yyline, yycolumn, "operador1.3.p"));
                  yybegin(YYINITIAL);
            }
            // fall through
          case 101: break;
          case 42:
            { {string.append(yytext()); yybegin(indetifierError);}
            }
            // fall through
          case 102: break;
          case 43:
            { tokens.add(new Token(string.toString(), yyline, yycolumn, "identificador1.2.p"));
                  tokens.add(new Token("{", yyline, yycolumn, "operador1.3.p"));
                  
                  yybegin(YYINITIAL);
            }
            // fall through
          case 103: break;
          case 44:
            { string.append("{");string.append(yytext());yybegin(indetifierError);
            }
            // fall through
          case 104: break;
          case 45:
            { string.setLength(0);string.append(yytext()); yybegin(decimalError);
            }
            // fall through
          case 105: break;
          case 46:
            { errorLine = -1;
                                    errorColumn = -1; 
                                    yybegin(Comments);
            }
            // fall through
          case 106: break;
          case 47:
            { yybegin(lineComment);
            }
            // fall through
          case 107: break;
          case 48:
            { string.setLength(0); string.append(yytext());errores.add(new Token(yytext(), yyline, yycolumn, "Error Decimal"));
            }
            // fall through
          case 108: break;
          case 49:
            { tokens.add(new Token(yytext().trim(), yyline, yycolumn, "Palabra reservada"));
            }
            // fall through
          case 109: break;
          case 50:
            { string.append(yytext()) ; yybegin(decimalError);
            }
            // fall through
          case 110: break;
          case 51:
            { if(errorLine != -1){
                                    errores.add(new Token("*", errorLine, errorColumn, "Error: linea sin * <comentario bloque>"));
                                  }
                                    yybegin(YYINITIAL);
            }
            // fall through
          case 111: break;
          case 52:
            { tokens.add(new Token(string.toString(), yyline, yycolumn, "identificador1.2"));
                   string.setLength(0);
                   string.append(yytext());
                   string.setLength(1);
                   tokens.add(new Token(string.toString(), yyline, yycolumn, "operador1.3"));
                   yybegin(YYINITIAL);
            }
            // fall through
          case 112: break;
          case 53:
            { errores.add(new Token(string.toString(), yyline, yycolumn, "Error de identificador2.4"));
                   yybegin(lineComment);
            }
            // fall through
          case 113: break;
          case 54:
            { errores.add(new Token(string.toString(), yyline, yycolumn, "Error de identificador2.2"));
                   string.setLength(0);
                   string.append(yytext());
                   string.setLength(1);
                   tokens.add(new Token(string.toString(), yyline, yycolumn, "operador2.3"));
                   yybegin(YYINITIAL);
            }
            // fall through
          case 114: break;
          case 55:
            { tokens.add(new Token(yytext(), yyline, yycolumn, "Units"));
            }
            // fall through
          case 115: break;
          case 56:
            { tokens.add(new Token(string.toString(), yyline, yycolumn, "identificador1.4"));
                   string.setLength(0);
                   string.append(yytext());
                   string.setLength(1);
                   tokens.add(new Token(string.toString(), yyline, yycolumn, "operador1.5"));
                   yybegin(lineComment);
            }
            // fall through
          case 116: break;
          case 57:
            { errores.add(new Token(string.toString(), yyline, yycolumn, "Error de identificador2.5"));
                   string.setLength(0);
                   string.append(yytext());
                   string.setLength(1);
                   tokens.add(new Token(string.toString(), yyline, yycolumn, "operador2.6"));
                   yybegin(lineComment);
            }
            // fall through
          case 117: break;
          case 58:
            { tokens.add(new Token(yytext(), yyline, yycolumn, "Transac"));
            }
            // fall through
          case 118: break;
          case 59:
            { string.setLength(0); 
                      string.append(yytext());
                      yybegin(hexaState);
            }
            // fall through
          case 119: break;
          case 60:
            { string.setLength(0); 
                      string.append(yytext());
                      yybegin(hexaStateC);
            }
            // fall through
          case 120: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }

  /**
   * Runs the scanner on input files.
   *
   * This is a standalone scanner, it will print any unmatched
   * text to System.out unchanged.
   *
   * @param argv   the command line, contains the filenames to run
   *               the scanner on.
   */
  public static void main(String[] argv) {
    if (argv.length == 0) {
      System.out.println("Usage : java Lexer [ --encoding <name> ] <inputfile(s)>");
    }
    else {
      int firstFilePos = 0;
      String encodingName = "UTF-8";
      if (argv[0].equals("--encoding")) {
        firstFilePos = 2;
        encodingName = argv[1];
        try {
          // Side-effect: is encodingName valid?
          java.nio.charset.Charset.forName(encodingName);
        } catch (Exception e) {
          System.out.println("Invalid encoding '" + encodingName + "'");
          return;
        }
      }
      for (int i = firstFilePos; i < argv.length; i++) {
        Lexer scanner = null;
        try {
          java.io.FileInputStream stream = new java.io.FileInputStream(argv[i]);
          java.io.Reader reader = new java.io.InputStreamReader(stream, encodingName);
          scanner = new Lexer(reader);
          while ( !scanner.zzAtEOF ) scanner.yylex();
        }
        catch (java.io.FileNotFoundException e) {
          System.out.println("File not found : \""+argv[i]+"\"");
        }
        catch (java.io.IOException e) {
          System.out.println("IO error scanning file \""+argv[i]+"\"");
          System.out.println(e);
        }
        catch (Exception e) {
          System.out.println("Unexpected exception:");
          e.printStackTrace();
        }
      }
    }
  }


}
